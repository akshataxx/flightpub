{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useArrowContainer = void 0;\n\nvar react_1 = require(\"react\");\n\nvar useArrowContainer = function (_a) {\n  var childRect = _a.childRect,\n      popoverRect = _a.popoverRect,\n      position = _a.position,\n      arrowSize = _a.arrowSize,\n      arrowColor = _a.arrowColor;\n  var arrowContainerStyle = react_1.useMemo(function () {\n    return {\n      padding: arrowSize\n    };\n  }, [arrowSize]);\n  var arrowStyle = react_1.useMemo(function () {\n    return __assign({\n      position: 'absolute'\n    }, function () {\n      var arrowWidth = arrowSize * 2;\n      var top = childRect.top - popoverRect.top + childRect.height / 2 - arrowWidth / 2;\n      var left = childRect.left - popoverRect.left + childRect.width / 2 - arrowWidth / 2;\n      var lowerBound = arrowSize;\n      var leftUpperBound = popoverRect.width - arrowSize;\n      var topUpperBound = popoverRect.height - arrowSize;\n      left = left < lowerBound ? lowerBound : left;\n      left = left + arrowWidth > leftUpperBound ? leftUpperBound - arrowWidth : left;\n      top = top < lowerBound ? lowerBound : top;\n      top = top + arrowWidth > topUpperBound ? topUpperBound - arrowWidth : top;\n      top = Number.isNaN(top) ? 0 : top;\n      left = Number.isNaN(left) ? 0 : left;\n\n      switch (position) {\n        case 'right':\n          return {\n            borderTop: arrowSize + \"px solid transparent\",\n            borderBottom: arrowSize + \"px solid transparent\",\n            borderRight: arrowSize + \"px solid \" + arrowColor,\n            left: 0,\n            top: top\n          };\n\n        case 'left':\n          return {\n            borderTop: arrowSize + \"px solid transparent\",\n            borderBottom: arrowSize + \"px solid transparent\",\n            borderLeft: arrowSize + \"px solid \" + arrowColor,\n            right: 0,\n            top: top\n          };\n\n        case 'bottom':\n          return {\n            borderLeft: arrowSize + \"px solid transparent\",\n            borderRight: arrowSize + \"px solid transparent\",\n            borderBottom: arrowSize + \"px solid \" + arrowColor,\n            top: 0,\n            left: left\n          };\n\n        case 'top':\n          return {\n            borderLeft: arrowSize + \"px solid transparent\",\n            borderRight: arrowSize + \"px solid transparent\",\n            borderTop: arrowSize + \"px solid \" + arrowColor,\n            bottom: 0,\n            left: left\n          };\n\n        default:\n          return {\n            display: 'hidden'\n          };\n      }\n    }());\n  }, [arrowColor, arrowSize, childRect.height, childRect.left, childRect.top, childRect.width, popoverRect.height, popoverRect.left, popoverRect.top, popoverRect.width, position]);\n  return {\n    arrowContainerStyle: arrowContainerStyle,\n    arrowStyle: arrowStyle\n  };\n};\n\nexports.useArrowContainer = useArrowContainer;","map":{"version":3,"mappings":"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","names":["useArrowContainer","_a","childRect","popoverRect","position","arrowSize","arrowColor","arrowContainerStyle","react_1","padding","arrowStyle","__assign","arrowWidth","top","height","left","width","lowerBound","leftUpperBound","topUpperBound","Number","isNaN","borderTop","borderBottom","borderRight","borderLeft","right","bottom","display","exports"],"sources":["C:\\Users\\ewart\\OneDrive\\Documents\\GitHub\\flightpub\\client\\node_modules\\react-tiny-popover\\src\\useArrowContainer.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport { UseArrowContainerProps } from '.';\n\nexport const useArrowContainer = ({\n  childRect,\n  popoverRect,\n  position,\n  arrowSize,\n  arrowColor,\n}: UseArrowContainerProps) => {\n  const arrowContainerStyle = useMemo(\n    () =>\n      ({\n        padding: arrowSize,\n      } as React.CSSProperties),\n    [arrowSize],\n  );\n\n  const arrowStyle = useMemo(\n    () =>\n      ({\n        position: 'absolute',\n        ...((): React.CSSProperties => {\n          const arrowWidth = arrowSize * 2;\n          let top = childRect.top - popoverRect.top + childRect.height / 2 - arrowWidth / 2;\n          let left = childRect.left - popoverRect.left + childRect.width / 2 - arrowWidth / 2;\n\n          const lowerBound = arrowSize;\n          const leftUpperBound = popoverRect.width - arrowSize;\n          const topUpperBound = popoverRect.height - arrowSize;\n\n          left = left < lowerBound ? lowerBound : left;\n          left = left + arrowWidth > leftUpperBound ? leftUpperBound - arrowWidth : left;\n          top = top < lowerBound ? lowerBound : top;\n          top = top + arrowWidth > topUpperBound ? topUpperBound - arrowWidth : top;\n\n          top = Number.isNaN(top) ? 0 : top;\n          left = Number.isNaN(left) ? 0 : left;\n\n          switch (position) {\n            case 'right':\n              return {\n                borderTop: `${arrowSize}px solid transparent`,\n                borderBottom: `${arrowSize}px solid transparent`,\n                borderRight: `${arrowSize}px solid ${arrowColor}`,\n                left: 0,\n                top,\n              };\n            case 'left':\n              return {\n                borderTop: `${arrowSize}px solid transparent`,\n                borderBottom: `${arrowSize}px solid transparent`,\n                borderLeft: `${arrowSize}px solid ${arrowColor}`,\n                right: 0,\n                top,\n              };\n            case 'bottom':\n              return {\n                borderLeft: `${arrowSize}px solid transparent`,\n                borderRight: `${arrowSize}px solid transparent`,\n                borderBottom: `${arrowSize}px solid ${arrowColor}`,\n                top: 0,\n                left,\n              };\n            case 'top':\n              return {\n                borderLeft: `${arrowSize}px solid transparent`,\n                borderRight: `${arrowSize}px solid transparent`,\n                borderTop: `${arrowSize}px solid ${arrowColor}`,\n                bottom: 0,\n                left,\n              };\n            default:\n              return {\n                display: 'hidden',\n              };\n          }\n        })(),\n      } as React.CSSProperties),\n    [\n      arrowColor,\n      arrowSize,\n      childRect.height,\n      childRect.left,\n      childRect.top,\n      childRect.width,\n      popoverRect.height,\n      popoverRect.left,\n      popoverRect.top,\n      popoverRect.width,\n      position,\n    ],\n  );\n\n  return {\n    arrowContainerStyle,\n    arrowStyle,\n  };\n};\n"]},"metadata":{},"sourceType":"script"}