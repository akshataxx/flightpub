{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ewart\\\\OneDrive\\\\Documents\\\\GitHub\\\\flightpub\\\\client\\\\src\\\\frontEnd\\\\components\\\\account\\\\RegForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classes from \"./RegForm.module.css\";\nimport passwordRegexp from \"password-regexp\";\nimport isEmail from \"validator/es/lib/isEmail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegForm() {\n  _s();\n\n  const [values, setValues] = useState({\n    email: '',\n    password: '',\n    repeatPassword: '',\n    firstName: '',\n    lastName: '',\n    userName: '',\n    dob: ''\n  });\n  const [errors, setErrors] = useState({\n    email: false,\n    password: false,\n    repeatPassword: false,\n    fetchError: false,\n    fetchErrorMsg: ''\n  });\n\n  const handleChange = fieldName => event => {\n    const currValue = event.target.value; // switch(fieldName) {\n    //     case 'email':\n    //         isEmail(currValue)\n    //             ? setErrors({...errors, email:false})\n    //             : setErrors({...errors,email:true})\n    //         break;\n    //     case 'password':\n    //         passwordRegexp(currValue)\n    //             ? setErrors({...errors, password:false})\n    //             : setErrors({...errors,password:true})\n    //         break;\n    //     case 'repeatPassword':\n    //         currValue === values.password\n    //             ? setErrors({...errors, repeatPassword:false})\n    //             : setErrors({...errors, repeatPassword:true})\n    //         break;\n    //     default:\n    //         break;\n    // }\n\n    setValues({ ...values,\n      [fieldName]: event.target.value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const res = await fetch('/user/registerUser', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: values.email,\n          password: values.password,\n          firstName: values.firstName,\n          lastName: values.lastName,\n          userName: values.userName,\n          dob: values.dob\n        })\n      });\n      /*.then(res=>res.json())\r\n      .then(data=>alert(data.msg))*/\n\n      if (!res.ok) {\n        const error = await res.json();\n        return setErrors({ ...errors,\n          fetchError: true,\n          fetchErrorMsg: error.msg\n        });\n      }\n\n      const data = await res.json(); // this is just a visual feedback for user for this demo\n      // this will not be an error, rather we will show a different UI or redirect user to dashboard\n      // ideally we also want a way to confirm their email or identity\n\n      setErrors({ ...errors,\n        fetchError: true,\n        fetchErrorMsg: data.msg\n      });\n      setValues({\n        email: '',\n        password: '',\n        repeatPassword: '',\n        firstName: '',\n        lastName: '',\n        userName: '',\n        dob: ''\n      });\n    } catch (error) {\n      console.log(\"catch statement\");\n      setErrors({ ...errors,\n        fetchError: true,\n        fetchErrorMsg: \"Error on server, try again later\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.main,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.h1,\n      children: \"User Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), errors.fetchError && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: errors.fetchErrorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: classes.form,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.labels,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: values.userName,\n            placeholder: \"Username\",\n            onChange: handleChange('userName'),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: values.firstName,\n            placeholder: \"First name\",\n            onChange: handleChange('firstName'),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: values.lastName,\n            placeholder: \"Last name\",\n            onChange: handleChange('lastName'),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Date of Birth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"Date\",\n            value: values.dob,\n            min: \"1900-01-01\",\n            max: \"2022-01-01\",\n            onChange: handleChange('dob')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: values.email,\n            placeholder: \"Email\",\n            onChange: handleChange('email'),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password-field\",\n            placeholder: \"Password\",\n            value: values.password,\n            onChange: handleChange('password'),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Repeat Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"repeat-password-field\",\n            placeholder: \"Re-Type Password\",\n            value: values.repeatPassword,\n            onChange: handleChange('repeatPassword'),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.button,\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.button,\n          type: \"reset\",\n          value: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RegForm, \"sZ99FFopc2AU0PcvvUZOIbCR+N4=\");\n\n_c = RegForm;\nexport default RegForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegForm\");","map":{"version":3,"sources":["C:/Users/ewart/OneDrive/Documents/GitHub/flightpub/client/src/frontEnd/components/account/RegForm.js"],"names":["React","useState","classes","passwordRegexp","isEmail","RegForm","values","setValues","email","password","repeatPassword","firstName","lastName","userName","dob","errors","setErrors","fetchError","fetchErrorMsg","handleChange","fieldName","event","currValue","target","value","handleSubmit","preventDefault","res","fetch","method","headers","body","JSON","stringify","ok","error","json","msg","data","console","log","main","h1","form","labels","button"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport classes from \"./RegForm.module.css\";\r\nimport passwordRegexp from \"password-regexp\"\r\nimport isEmail from \"validator/es/lib/isEmail\";\r\n\r\nfunction RegForm() {\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        password: '',\r\n        repeatPassword: '',\r\n        firstName: '',\r\n        lastName:'',\r\n        userName: '',\r\n        dob:'',\r\n    })\r\n    const [errors, setErrors] = useState({\r\n        email: false,\r\n        password: false,\r\n        repeatPassword: false,\r\n        fetchError: false,\r\n        fetchErrorMsg: '',\r\n    })\r\n\r\n    const handleChange = (fieldName) => (event) => {\r\n        const currValue = event.target.value;\r\n\r\n        // switch(fieldName) {\r\n        //     case 'email':\r\n        //         isEmail(currValue)\r\n        //             ? setErrors({...errors, email:false})\r\n        //             : setErrors({...errors,email:true})\r\n        //         break;\r\n        //     case 'password':\r\n        //         passwordRegexp(currValue)\r\n        //             ? setErrors({...errors, password:false})\r\n        //             : setErrors({...errors,password:true})\r\n        //         break;\r\n        //     case 'repeatPassword':\r\n        //         currValue === values.password\r\n        //             ? setErrors({...errors, repeatPassword:false})\r\n        //             : setErrors({...errors, repeatPassword:true})\r\n        //         break;\r\n        //     default:\r\n        //         break;\r\n        // }\r\n        setValues({ ...values, [fieldName]: event.target.value })\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        try {\r\n\r\n            const res = await fetch('/user/registerUser', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    email: values.email,\r\n                    password: values.password,\r\n                    firstName: values.firstName,\r\n                    lastName: values.lastName,\r\n                    userName: values.userName,\r\n                    dob: values.dob,\r\n                }),\r\n            })\r\n                /*.then(res=>res.json())\r\n                .then(data=>alert(data.msg))*/\r\n\r\n            if (!res.ok) {\r\n                const error = await res.json()\r\n                return setErrors({\r\n                    ...errors,\r\n                    fetchError: true,\r\n                    fetchErrorMsg: error.msg,\r\n                })\r\n            }\r\n\r\n            const data = await res.json()\r\n            // this is just a visual feedback for user for this demo\r\n            // this will not be an error, rather we will show a different UI or redirect user to dashboard\r\n            // ideally we also want a way to confirm their email or identity\r\n            setErrors({\r\n                ...errors,\r\n                fetchError: true,\r\n                fetchErrorMsg: data.msg,\r\n            })\r\n            setValues({\r\n                email: '',\r\n                password: '',\r\n                repeatPassword: '',\r\n                firstName: '',\r\n                lastName:'',\r\n                userName: '',\r\n                dob:''\r\n            })\r\n        } catch (error) {\r\n            console.log(\"catch statement\")\r\n            setErrors({\r\n                ...errors,\r\n                fetchError: true,\r\n                fetchErrorMsg: \"Error on server, try again later\",\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.main}>\r\n            <h1 className={classes.h1}>User Registration</h1>\r\n            {errors.fetchError && (<h2>{errors.fetchErrorMsg}</h2>)}\r\n                <form onSubmit={handleSubmit} className={classes.form}>\r\n                    <div className={classes.labels}>\r\n                        <label >\r\n                            <p>Username</p>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={values.userName}\r\n                                placeholder=\"Username\"\r\n                                onChange={handleChange('userName')}\r\n                                required={true}\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            <p>First Name</p>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={values.firstName}\r\n                                placeholder=\"First name\"\r\n                                onChange={handleChange('firstName')}\r\n                                required={true}\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            <p>Last Name</p>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={values.lastName}\r\n                                placeholder=\"Last name\"\r\n                                onChange={handleChange('lastName')}\r\n                                required={true}\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            <p>Date of Birth</p>\r\n                            <input\r\n                                type=\"Date\"\r\n                                value={values.dob}\r\n\r\n                                min = \"1900-01-01\"\r\n                                max = \"2022-01-01\"\r\n                                onChange={handleChange('dob')}\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            <p>Email Address</p>\r\n                            <input\r\n                                type='email'\r\n                                value={values.email}\r\n                                placeholder='Email'\r\n                                onChange={handleChange('email')}\r\n                                required={true}\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            <p>Password</p>\r\n                            <input\r\n                                type='password'\r\n                                id='password-field'\r\n                                placeholder='Password'\r\n                                value={values.password}\r\n                                onChange={handleChange('password')}\r\n                                required={true}\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            <p>Repeat Password</p>\r\n                            <input\r\n                                type='password'\r\n                                id='repeat-password-field'\r\n                                placeholder='Re-Type Password'\r\n                                value={values.repeatPassword}\r\n                                onChange={handleChange('repeatPassword')}\r\n                                required={true}\r\n                            />\r\n                        </label>\r\n                        <input className={classes.button} type=\"submit\" value=\"Submit\"/>\r\n                        <input className={classes.button} type=\"reset\" value=\"Reset\" />\r\n                    </div>\r\n                </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegForm;"]},"metadata":{},"sourceType":"module"}