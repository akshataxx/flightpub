{"ast":null,"code":"const _excluded = [\"multiple\", \"data\", \"value\", \"onChange\", \"accessors\", \"className\", \"messages\", \"disabled\", \"renderItem\", \"renderGroup\", \"searchTerm\", \"groupBy\", \"elementRef\", \"optionComponent\", \"renderList\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/* eslint-disable @typescript-eslint/no-empty-function */\n\n\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useImperativeHandle, useMemo } from 'react';\nimport ListOption from './ListOption';\nimport ListOptionGroup from './ListOptionGroup';\nimport { useMessagesWithDefaults } from './messages'; // import { WidgetHTMLProps } from './shared'\n\nimport * as CustomPropTypes from './PropTypes';\nimport { groupBySortedKeys, makeArray, toItemArray } from './_';\nimport { useInstanceId } from './WidgetHelpers';\nimport useMutationObserver from '@restart/hooks/useMutationObserver';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nconst whitelist = ['style', 'className', 'role', 'id', 'autocomplete', 'size', 'tabIndex', 'maxLength', 'name'];\nconst whitelistRegex = [/^aria-/, /^data-/, /^on[A-Z]\\w+/];\n\nfunction pickElementProps(props) {\n  const result = {};\n  Object.keys(props).forEach(key => {\n    if (whitelist.indexOf(key) !== -1 || whitelistRegex.some(r => !!key.match(r))) result[key] = props[key];\n  });\n  return result;\n}\n\nconst propTypes = {\n  data: PropTypes.array,\n  dataKey: CustomPropTypes.accessor,\n  textField: CustomPropTypes.accessor,\n  onSelect: PropTypes.func,\n  onMove: PropTypes.func,\n  onHoverOption: PropTypes.func,\n  optionComponent: PropTypes.elementType,\n  renderItem: PropTypes.func,\n  renderGroup: PropTypes.func,\n  focusedItem: PropTypes.any,\n  selectedItem: PropTypes.any,\n  searchTerm: PropTypes.string,\n  disabled: CustomPropTypes.disabled.acceptsArray,\n  messages: PropTypes.shape({\n    emptyList: PropTypes.func.isRequired\n  })\n};\nexport const useScrollFocusedIntoView = function (element) {\n  let observeChanges = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const scrollIntoView = useCallback(() => {\n    if (!element) return;\n    let selectedItem = element.querySelector('[data-rw-focused]');\n\n    if (selectedItem && selectedItem.scrollIntoView) {\n      selectedItem.scrollIntoView({\n        block: 'nearest',\n        inline: 'nearest'\n      });\n    }\n  }, [element]);\n  useMutationObserver(observeChanges ? element : null, {\n    subtree: true,\n    attributes: true,\n    attributeFilter: ['data-rw-focused']\n  }, scrollIntoView);\n  return scrollIntoView;\n};\nexport function useHandleSelect(multiple, dataItems, onChange) {\n  return (dataItem, event) => {\n    if (multiple === false) {\n      onChange(dataItem, {\n        dataItem,\n        lastValue: dataItems[0],\n        originalEvent: event\n      });\n      return;\n    }\n\n    const checked = dataItems.includes(dataItem);\n    onChange(checked ? dataItems.filter(d => d !== dataItem) : [...dataItems, dataItem], {\n      dataItem,\n      lastValue: dataItems,\n      action: checked ? 'remove' : 'insert',\n      originalEvent: event\n    });\n  };\n}\nconst List = /*#__PURE__*/React.forwardRef(function List(_ref, outerRef) {\n  var _elementProps$role;\n\n  let {\n    multiple = false,\n    data = [],\n    value,\n    onChange,\n    accessors,\n    className,\n    messages,\n    disabled,\n    renderItem,\n    renderGroup,\n    searchTerm,\n    groupBy,\n    elementRef,\n    optionComponent: Option = ListOption,\n    renderList\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const id = useInstanceId();\n  const dataItems = makeArray(value, multiple);\n  const groupedData = useMemo(() => groupBy ? groupBySortedKeys(groupBy, data) : undefined, [data, groupBy]);\n  const [element, ref] = useCallbackRef();\n  const disabledItems = toItemArray(disabled);\n  const {\n    emptyList\n  } = useMessagesWithDefaults(messages);\n  const divRef = useMergedRefs(ref, elementRef);\n  const handleSelect = useHandleSelect(multiple, dataItems, onChange);\n  const scrollIntoView = useScrollFocusedIntoView(element, true);\n  let elementProps = pickElementProps(props);\n  useImperativeHandle(outerRef, () => ({\n    scrollIntoView\n  }), [scrollIntoView]);\n\n  function renderOption(item, idx) {\n    const textValue = accessors.text(item);\n    const itemIsDisabled = disabledItems.includes(item);\n    const itemIsSelected = dataItems.includes(item);\n    return /*#__PURE__*/React.createElement(Option, {\n      dataItem: item,\n      key: `item_${idx}`,\n      searchTerm: searchTerm,\n      onSelect: handleSelect,\n      disabled: itemIsDisabled,\n      selected: itemIsSelected\n    }, renderItem ? renderItem({\n      item,\n      searchTerm,\n      index: idx,\n      text: textValue,\n      // TODO: probably remove\n      value: accessors.value(item),\n      disabled: itemIsDisabled\n    }) : textValue);\n  }\n\n  const items = groupedData ? groupedData.map((_ref2, idx) => {\n    let [group, items] = _ref2;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      role: \"group\",\n      key: `group_${idx}`\n    }, /*#__PURE__*/React.createElement(ListOptionGroup, null, renderGroup ? renderGroup({\n      group\n    }) : group), items.map(renderOption));\n  }) : data.map(renderOption);\n  const rootProps = Object.assign({\n    id,\n    tabIndex: 0,\n    ref: divRef\n  }, elementProps, {\n    'aria-multiselectable': !!multiple,\n    className: cn(className, 'rw-list'),\n    role: (_elementProps$role = elementProps.role) != null ? _elementProps$role : 'listbox',\n    children: React.Children.count(items) ? items : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rw-list-empty\"\n    }, emptyList())\n  });\n  return renderList ? renderList(rootProps) : /*#__PURE__*/React.createElement(\"div\", rootProps);\n});\nList.displayName = 'List';\nList.propTypes = propTypes;\nexport default List;","map":{"version":3,"sources":["C:/Users/ewart/OneDrive/Documents/GitHub/flightpub/client/node_modules/react-widgets/esm/List.js"],"names":["_excluded","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","cn","PropTypes","React","useCallback","useImperativeHandle","useMemo","ListOption","ListOptionGroup","useMessagesWithDefaults","CustomPropTypes","groupBySortedKeys","makeArray","toItemArray","useInstanceId","useMutationObserver","useCallbackRef","useMergedRefs","whitelist","whitelistRegex","pickElementProps","props","result","forEach","some","r","match","propTypes","data","array","dataKey","accessor","textField","onSelect","func","onMove","onHoverOption","optionComponent","elementType","renderItem","renderGroup","focusedItem","any","selectedItem","searchTerm","string","disabled","acceptsArray","messages","shape","emptyList","isRequired","useScrollFocusedIntoView","element","observeChanges","scrollIntoView","querySelector","block","inline","subtree","attributes","attributeFilter","useHandleSelect","multiple","dataItems","onChange","dataItem","event","lastValue","originalEvent","checked","includes","filter","d","action","List","forwardRef","_ref","outerRef","_elementProps$role","value","accessors","className","groupBy","elementRef","Option","renderList","id","groupedData","undefined","ref","disabledItems","divRef","handleSelect","elementProps","renderOption","item","idx","textValue","text","itemIsDisabled","itemIsSelected","createElement","selected","index","items","map","group","role","rootProps","assign","tabIndex","children","Children","count","displayName"],"mappings":"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","sourcesContent":["const _excluded = [\"multiple\", \"data\", \"value\", \"onChange\", \"accessors\", \"className\", \"messages\", \"disabled\", \"renderItem\", \"renderGroup\", \"searchTerm\", \"groupBy\", \"elementRef\", \"optionComponent\", \"renderList\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-empty-function */\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useImperativeHandle, useMemo } from 'react';\nimport ListOption from './ListOption';\nimport ListOptionGroup from './ListOptionGroup';\nimport { useMessagesWithDefaults } from './messages'; // import { WidgetHTMLProps } from './shared'\n\nimport * as CustomPropTypes from './PropTypes';\nimport { groupBySortedKeys, makeArray, toItemArray } from './_';\nimport { useInstanceId } from './WidgetHelpers';\nimport useMutationObserver from '@restart/hooks/useMutationObserver';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nconst whitelist = ['style', 'className', 'role', 'id', 'autocomplete', 'size', 'tabIndex', 'maxLength', 'name'];\nconst whitelistRegex = [/^aria-/, /^data-/, /^on[A-Z]\\w+/];\n\nfunction pickElementProps(props) {\n  const result = {};\n  Object.keys(props).forEach(key => {\n    if (whitelist.indexOf(key) !== -1 || whitelistRegex.some(r => !!key.match(r))) result[key] = props[key];\n  });\n  return result;\n}\n\nconst propTypes = {\n  data: PropTypes.array,\n  dataKey: CustomPropTypes.accessor,\n  textField: CustomPropTypes.accessor,\n  onSelect: PropTypes.func,\n  onMove: PropTypes.func,\n  onHoverOption: PropTypes.func,\n  optionComponent: PropTypes.elementType,\n  renderItem: PropTypes.func,\n  renderGroup: PropTypes.func,\n  focusedItem: PropTypes.any,\n  selectedItem: PropTypes.any,\n  searchTerm: PropTypes.string,\n  disabled: CustomPropTypes.disabled.acceptsArray,\n  messages: PropTypes.shape({\n    emptyList: PropTypes.func.isRequired\n  })\n};\nexport const useScrollFocusedIntoView = (element, observeChanges = false) => {\n  const scrollIntoView = useCallback(() => {\n    if (!element) return;\n    let selectedItem = element.querySelector('[data-rw-focused]');\n\n    if (selectedItem && selectedItem.scrollIntoView) {\n      selectedItem.scrollIntoView({\n        block: 'nearest',\n        inline: 'nearest'\n      });\n    }\n  }, [element]);\n  useMutationObserver(observeChanges ? element : null, {\n    subtree: true,\n    attributes: true,\n    attributeFilter: ['data-rw-focused']\n  }, scrollIntoView);\n  return scrollIntoView;\n};\nexport function useHandleSelect(multiple, dataItems, onChange) {\n  return (dataItem, event) => {\n    if (multiple === false) {\n      onChange(dataItem, {\n        dataItem,\n        lastValue: dataItems[0],\n        originalEvent: event\n      });\n      return;\n    }\n\n    const checked = dataItems.includes(dataItem);\n    onChange(checked ? dataItems.filter(d => d !== dataItem) : [...dataItems, dataItem], {\n      dataItem,\n      lastValue: dataItems,\n      action: checked ? 'remove' : 'insert',\n      originalEvent: event\n    });\n  };\n}\nconst List = /*#__PURE__*/React.forwardRef(function List(_ref, outerRef) {\n  var _elementProps$role;\n\n  let {\n    multiple = false,\n    data = [],\n    value,\n    onChange,\n    accessors,\n    className,\n    messages,\n    disabled,\n    renderItem,\n    renderGroup,\n    searchTerm,\n    groupBy,\n    elementRef,\n    optionComponent: Option = ListOption,\n    renderList\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const id = useInstanceId();\n  const dataItems = makeArray(value, multiple);\n  const groupedData = useMemo(() => groupBy ? groupBySortedKeys(groupBy, data) : undefined, [data, groupBy]);\n  const [element, ref] = useCallbackRef();\n  const disabledItems = toItemArray(disabled);\n  const {\n    emptyList\n  } = useMessagesWithDefaults(messages);\n  const divRef = useMergedRefs(ref, elementRef);\n  const handleSelect = useHandleSelect(multiple, dataItems, onChange);\n  const scrollIntoView = useScrollFocusedIntoView(element, true);\n  let elementProps = pickElementProps(props);\n  useImperativeHandle(outerRef, () => ({\n    scrollIntoView\n  }), [scrollIntoView]);\n\n  function renderOption(item, idx) {\n    const textValue = accessors.text(item);\n    const itemIsDisabled = disabledItems.includes(item);\n    const itemIsSelected = dataItems.includes(item);\n    return /*#__PURE__*/React.createElement(Option, {\n      dataItem: item,\n      key: `item_${idx}`,\n      searchTerm: searchTerm,\n      onSelect: handleSelect,\n      disabled: itemIsDisabled,\n      selected: itemIsSelected\n    }, renderItem ? renderItem({\n      item,\n      searchTerm,\n      index: idx,\n      text: textValue,\n      // TODO: probably remove\n      value: accessors.value(item),\n      disabled: itemIsDisabled\n    }) : textValue);\n  }\n\n  const items = groupedData ? groupedData.map(([group, items], idx) => /*#__PURE__*/React.createElement(\"div\", {\n    role: \"group\",\n    key: `group_${idx}`\n  }, /*#__PURE__*/React.createElement(ListOptionGroup, null, renderGroup ? renderGroup({\n    group\n  }) : group), items.map(renderOption))) : data.map(renderOption);\n  const rootProps = Object.assign({\n    id,\n    tabIndex: 0,\n    ref: divRef\n  }, elementProps, {\n    'aria-multiselectable': !!multiple,\n    className: cn(className, 'rw-list'),\n    role: (_elementProps$role = elementProps.role) != null ? _elementProps$role : 'listbox',\n    children: React.Children.count(items) ? items : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rw-list-empty\"\n    }, emptyList())\n  });\n  return renderList ? renderList(rootProps) : /*#__PURE__*/React.createElement(\"div\", rootProps);\n});\nList.displayName = 'List';\nList.propTypes = propTypes;\nexport default List;"]},"metadata":{},"sourceType":"module"}