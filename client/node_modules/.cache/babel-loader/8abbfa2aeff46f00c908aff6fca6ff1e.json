{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ewart\\\\OneDrive\\\\Documents\\\\GitHub\\\\flightpub\\\\client\\\\src\\\\frontEnd\\\\components\\\\flights\\\\FlightList.js\",\n    _s = $RefreshSig$();\n\nimport FlightItem from './FlightItem';\nimport classes from './FlightList.module.css';\nimport Card from \"../ui/Card\";\nimport { useState } from \"react\";\nimport { useContext } from 'react';\nimport FlightPubContext from \"../../store/FlightPubContext\";\nimport DropdownList from \"react-widgets/DropdownList\";\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FlightList(props) {\n  _s();\n\n  const context = useContext(FlightPubContext);\n  const [flightList, setFlightList] = useState([]);\n  const [returnFlightList, setReturnFlightList] = useState([]);\n  const [morningFilter, setMorningFilter] = useState(false);\n  const [afternoonFilter, setAfternoonFilter] = useState(false);\n  const [eveningFilter, setEveningFilter] = useState(false);\n  const [flightSelected, setFlightSelected] = useState(false);\n  const [selectedFlight, setSelectedFlight] = useState([]);\n  const [returnFlightSelected, setReturnFlightSelected] = useState(false);\n  const [selectedReturnFlight, setSelectedReturnFlight] = useState([]);\n\n  let toggleMorningFilter = () => {\n    if (morningFilter) {\n      setMorningFilter(false);\n      return;\n    }\n\n    setMorningFilter(true);\n    return;\n  };\n\n  let toggleAfternoonFilter = () => {\n    if (afternoonFilter) {\n      setAfternoonFilter(false);\n      return;\n    }\n\n    setAfternoonFilter(true);\n    return;\n  };\n\n  let toggleEveningFilter = () => {\n    if (eveningFilter) {\n      setEveningFilter(false);\n      return;\n    }\n\n    setEveningFilter(true);\n    return;\n  };\n\n  props.flights.map(el => {\n    flightList.push(el);\n    returnFlightList.push(el);\n  });\n\n  if (flightSelected) {\n    console.log(\"wow ur trip to is selected\");\n  }\n\n  if (returnFlightSelected) {\n    console.log(\"wow way back selected\");\n  } //struct to store flights in a reverse linkedList\n  //pattern for the multi-search algorithm\n\n\n  function makeFlightStruct(e) {\n    var flightRefs = e.split(' ');\n\n    function constructor() {\n      this[flightRefs[0]] = arguments[0];\n      this[flightRefs[1]] = arguments[1];\n    }\n\n    return constructor;\n  }\n\n  function multiSearch() {\n    //todo\n    //create struct where each el has a ref to it's prev flightPoint except for the start of each search which uses null\n    //replace iterating through map to find matches with, iterating through returned database results\n    //\n    //flightList.length = 0;\n    //returnFlightList.length = 0;\n    var FlightPoint = makeFlightStruct(\"prev curr\");\n    var flightPoints = [];\n    var startIndex = 0;\n    props.flights.map(el => {\n      flightPoints.length = 0; //find next start point\n\n      if (el.departure.toLowerCase() == props.searchQuery.departureLocation.toLowerCase()) {\n        if (el.destination.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase()) {//add to flight list\n          //don't include other results as they are meaningless and create a loop\n        }\n\n        flightPoints.push(new FlightPoint(null, el));\n      } //search for flights from this node\n\n\n      props.flights.map(el2 => {\n        if (el2.departure.toLowerCase() == flightPoints[startIndex].curr.destination.toLowerCase()) {\n          if (el2.destination.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase()) {//add to search results\n          }\n\n          flightPoints.push(new FlightPoint(flightPoints[startIndex], el2));\n        }\n      });\n      startIndex++;\n      var endIndex = flightPoints.length;\n\n      for (var i = startIndex; i < endIndex; i++) {\n        props.flights.map(el2 => {\n          if (el2.departure.toLowerCase() == flightPoints[i].curr.destination.toLowerCase() && el2.destination.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase()) {\n            //add flight to list\n            flightPoints.push(new FlightPoint(flightPoints[i], el2));\n          }\n        });\n      }\n    });\n  }\n\n  function searchFlightList() {\n    flightList.length = 0;\n    returnFlightList.length = 0;\n    props.flights.map(el => {\n      if (!props.searchQuery.flexibleDeparture) {\n        if (el.destination.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase() && el.departure.toLowerCase() == props.searchQuery.departureLocation.toLowerCase() && el.departureDate.getFullYear() == props.searchQuery.soonestDepartureDate.getFullYear() && el.departureDate.getMonth() == props.searchQuery.soonestDepartureDate.getMonth() && el.departureDate.getDate() == props.searchQuery.soonestDepartureDate.getDate()) {\n          if (!morningFilter && !afternoonFilter && !eveningFilter) {\n            flightList.push(el);\n          }\n\n          if (morningFilter) {\n            console.log(\"morning filter active\");\n\n            if (el.departureDate.getHours() >= 0 && el.departureDate.getHours() < 12) {\n              flightList.push(el);\n            }\n          }\n\n          if (afternoonFilter) {\n            if (el.departureDate.getHours() >= 12 && el.departureDate.getHours() < 18) {\n              flightList.push(el);\n            }\n          }\n\n          if (eveningFilter) {\n            if (el.departureDate.getHours() >= 18) {\n              flightList.push(el);\n            }\n          }\n        }\n      } else {\n        if (el.destination.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase() && el.departure.toLowerCase() == props.searchQuery.departureLocation.toLowerCase() && el.departureDate.getFullYear() >= props.searchQuery.soonestDepartureDate.getFullYear() && el.departureDate.getFullYear() <= props.searchQuery.latestDepartureDate.getFullYear() && el.departureDate.getMonth() >= props.searchQuery.soonestDepartureDate.getMonth() && el.departureDate.getMonth() <= props.searchQuery.latestDepartureDate.getMonth() && el.departureDate.getDate() >= props.searchQuery.soonestDepartureDate.getDate() && el.departureDate.getDate() <= props.searchQuery.latestDepartureDate.getDate()) {\n          if (!morningFilter && !afternoonFilter && !eveningFilter) {\n            flightList.push(el);\n          }\n\n          if (morningFilter) {\n            if (el.departureDate.getHours() >= 0 && el.departureDate.getHours() < 12) {\n              flightList.push(el);\n            }\n          }\n\n          if (afternoonFilter) {\n            if (el.departureDate.getHours() >= 12 && el.departureDate.getHours() < 18) {\n              flightList.push(el);\n            }\n          }\n\n          if (eveningFilter) {\n            if (el.departureDate.getHours() >= 18) {\n              flightList.push(el);\n            }\n          }\n        }\n      }\n\n      if (!props.searchQuery.oneWayTrip) {\n        if (!props.searchQuery.flexibleReturn) {\n          if (el.destination.toLowerCase() == props.searchQuery.departureLocation.toLowerCase() && el.departure.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase() && el.departureDate.getFullYear() == props.searchQuery.soonestReturnDate.getFullYear() && el.departureDate.getMonth() == props.searchQuery.soonestReturnDate.getMonth() && el.departureDate.getDate() == props.searchQuery.soonestReturnDate.getDate()) {\n            if (!morningFilter && !afternoonFilter && !eveningFilter) {\n              returnFlightList.push(el);\n            }\n\n            if (morningFilter) {\n              if (el.departureDate.getHours() >= 0 && el.departureDate.getHours() < 12) {\n                returnFlightList.push(el);\n              }\n            }\n\n            if (afternoonFilter) {\n              if (el.departureDate.getHours() >= 12 && el.departureDate.getHours() < 18) {\n                returnFlightList.push(el);\n              }\n            }\n\n            if (eveningFilter) {\n              if (el.departureDate.getHours() >= 18) {\n                returnFlightList.push(el);\n              }\n            }\n          }\n        } else {\n          if (el.destination.toLowerCase() == props.searchQuery.departureLocation.toLowerCase() && el.departure.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase() && el.departureDate.getFullYear() >= props.searchQuery.soonestReturnDate.getFullYear() && el.departureDate.getFullYear() <= props.searchQuery.latestReturnDate.getFullYear() && el.departureDate.getMonth() >= props.searchQuery.soonestReturnDate.getMonth() && el.departureDate.getMonth() <= props.searchQuery.latestReturnDate.getMonth() && el.departureDate.getDate() >= props.searchQuery.soonestReturnDate.getDate() && el.departureDate.getDate() <= props.searchQuery.latestReturnDate.getDate()) {\n            if (!morningFilter && !afternoonFilter && !eveningFilter) {\n              returnFlightList.push(el);\n            }\n\n            if (morningFilter) {\n              if (el.departureDate.getHours() >= 0 && el.departureDate.getHours() < 12) {\n                returnFlightList.push(el);\n              }\n            }\n\n            if (afternoonFilter) {\n              if (el.departureDate.getHours() >= 12 && el.departureDate.getHours() < 18) {\n                returnFlightList.push(el);\n              }\n            }\n\n            if (eveningFilter) {\n              if (el.departureDate.getHours() >= 18) {\n                returnFlightList.push(el);\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  function sort(e) {\n    if (e == \"soonest\") {\n      for (let i = 0; i < flightList.length; i++) {\n        for (let j = 0; j < flightList.length - i - 1; j++) {\n          if (flightList[j + 1].departureDate < flightList[j].departureDate) {\n            [flightList[j + 1], flightList[j]] = [flightList[j], flightList[j + 1]];\n          }\n        }\n      }\n\n      for (let i = 0; i < returnFlightList.length; i++) {\n        for (let j = 0; j < returnFlightList.length - i - 1; j++) {\n          if (returnFlightList[j + 1].departureDate < returnFlightList[j].departureDate) {\n            [returnFlightList[j + 1], returnFlightList[j]] = [returnFlightList[j], returnFlightList[j + 1]];\n          }\n        }\n      }\n    } else if (e == \"latest\") {\n      for (let i = 0; i < flightList.length; i++) {\n        for (let j = 0; j < flightList.length - i - 1; j++) {\n          if (flightList[j + 1].departureDate > flightList[j].departureDate) {\n            [flightList[j + 1], flightList[j]] = [flightList[j], flightList[j + 1]];\n          }\n        }\n      }\n\n      for (let i = 0; i < returnFlightList.length; i++) {\n        for (let j = 0; j < returnFlightList.length - i - 1; j++) {\n          if (returnFlightList[j + 1].departureDate > returnFlightList[j].departureDate) {\n            [returnFlightList[j + 1], returnFlightList[j]] = [returnFlightList[j], returnFlightList[j + 1]];\n          }\n        }\n      }\n    } else if (e == \"lowest price\") {\n      for (let i = 0; i < flightList.length; i++) {\n        for (let j = 0; j < flightList.length - i - 1; j++) {\n          if (flightList[j + 1].price < flightList[j].price) {\n            [flightList[j + 1], flightList[j]] = [flightList[j], flightList[j + 1]];\n          }\n        }\n      }\n\n      for (let i = 0; i < returnFlightList.length; i++) {\n        for (let j = 0; j < returnFlightList.length - i - 1; j++) {\n          if (returnFlightList[j + 1].price < returnFlightList[j].price) {\n            [returnFlightList[j + 1], returnFlightList[j]] = [returnFlightList[j], returnFlightList[j + 1]];\n          }\n        }\n      }\n    } else if (e == \"highest price\") {\n      for (let i = 0; i < flightList.length; i++) {\n        for (let j = 0; j < flightList.length - i - 1; j++) {\n          if (flightList[j + 1].price > flightList[j].price) {\n            [flightList[j + 1], flightList[j]] = [flightList[j], flightList[j + 1]];\n          }\n        }\n      }\n\n      for (let i = 0; i < returnFlightList.length; i++) {\n        for (let j = 0; j < returnFlightList.length - i - 1; j++) {\n          if (returnFlightList[j + 1].price > returnFlightList[j].price) {\n            [returnFlightList[j + 1], returnFlightList[j]] = [returnFlightList[j], returnFlightList[j + 1]];\n          }\n        }\n      }\n    }\n  }\n\n  function Return() {\n    if (props.searchQuery.oneWayTrip) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Return Trip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: classes.tableList,\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Flight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Departure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Destination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Dep\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Arr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: returnFlightList.map(flight => /*#__PURE__*/_jsxDEV(FlightItem, {\n            flightId: flight.flightId,\n            departureDate: flight.departureDate.getDate() + \"/\" + (flight.departureDate.getMonth() + 1) + \"/\" + flight.departureDate.getFullYear(),\n            departureTime: flight.departureTime,\n            arrivalTime: flight.arrivalTime,\n            destination: flight.destination,\n            departure: flight.departure,\n            price: flight.price,\n            return: true,\n            selectedId: selectedReturnFlight.length > 0 ? selectedReturnFlight[0].flightId : \"\",\n            selectFlight: res => res == true ? setReturnFlightSelected(true) : setFlightSelected(true),\n            selFlight: res => setSelectedReturnFlight(res)\n          }, flight.flightId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 11\n    }, this);\n  }\n\n  function bookingFlightHandler() {\n    const flightArr = [];\n\n    if (props.searchQuery.oneWayTrip) {\n      if (flightSelected) {\n        selectedFlight.map(flight => {\n          flightArr.push(flight);\n        }); //move onto next phase\n\n        context.setBookingsSelected(true);\n        console.log(context.bookingsSelected);\n        props.exportFlights(flightArr);\n        return;\n      }\n    } else {\n      if (flightSelected && returnFlightSelected) {\n        selectedFlight.map(flight => {\n          flightArr.push(flight);\n        });\n        selectedReturnFlight.map(flight => {\n          flightArr.push(flight);\n        });\n        context.setBookingsSelected(true);\n        console.log(context.bookingsSelected);\n        props.exportFlights(flightArr);\n        return;\n      }\n    } //some error has occured\n\n\n    console.log(\"you have not selected a return or departure flights\");\n    return;\n  }\n\n  multiSearch();\n  searchFlightList();\n  sort(\"latest\"); //what do need\n  //filters\n  //sort by\n  //\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Trip to Destination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.list,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"morningDeparture\",\n        children: \" Morning Departure \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"morningDeparture\",\n        onClick: toggleMorningFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"afternoonDeparture\",\n        children: \" Afternoon Departure \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"afternoonDeparture\",\n        onClick: toggleAfternoonFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"eveningDeparture\",\n        children: \" Evening Departure \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"eveningDeparture\",\n        onClick: toggleEveningFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: classes.tableList,\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Flight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Departure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Dep\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Arr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: flightList.map(flight => /*#__PURE__*/_jsxDEV(FlightItem, {\n          flightId: flight.flightId,\n          departureDate: flight.departureDate.getDate() + \"/\" + (flight.departureDate.getMonth() + 1) + \"/\" + flight.departureDate.getFullYear(),\n          departureTime: flight.departureTime,\n          arrivalTime: flight.arrivalTime,\n          destination: flight.destination,\n          departure: flight.departure,\n          price: flight.price,\n          selectedId: selectedFlight.length > 0 ? selectedFlight[0].flightId : \"\",\n          return: false,\n          selectFlight: res => res == true ? setReturnFlightSelected(true) : setFlightSelected(true),\n          selFlight: res => setSelectedFlight(res)\n        }, flight.flightId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Return, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.submitButt,\n      onClick: bookingFlightHandler,\n      children: \"Book Flights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 518,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FlightList, \"su2B9BK9GApXKAy+0VLbKuiHw9A=\");\n\n_c = FlightList;\nexport default FlightList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FlightList\");","map":{"version":3,"sources":["C:/Users/ewart/OneDrive/Documents/GitHub/flightpub/client/src/frontEnd/components/flights/FlightList.js"],"names":["FlightItem","classes","Card","useState","useContext","FlightPubContext","DropdownList","Button","FlightList","props","context","flightList","setFlightList","returnFlightList","setReturnFlightList","morningFilter","setMorningFilter","afternoonFilter","setAfternoonFilter","eveningFilter","setEveningFilter","flightSelected","setFlightSelected","selectedFlight","setSelectedFlight","returnFlightSelected","setReturnFlightSelected","selectedReturnFlight","setSelectedReturnFlight","toggleMorningFilter","toggleAfternoonFilter","toggleEveningFilter","flights","map","el","push","console","log","makeFlightStruct","e","flightRefs","split","constructor","arguments","multiSearch","FlightPoint","flightPoints","startIndex","length","departure","toLowerCase","searchQuery","departureLocation","destination","destinationLocation","el2","curr","endIndex","i","searchFlightList","flexibleDeparture","departureDate","getFullYear","soonestDepartureDate","getMonth","getDate","getHours","latestDepartureDate","oneWayTrip","flexibleReturn","soonestReturnDate","latestReturnDate","sort","j","price","Return","tableList","flight","flightId","departureTime","arrivalTime","res","bookingFlightHandler","flightArr","setBookingsSelected","bookingsSelected","exportFlights","list","submitButt"],"mappings":"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","sourcesContent":["import FlightItem from './FlightItem';\r\nimport classes from './FlightList.module.css';\r\nimport Card from \"../ui/Card\";\r\nimport {useState} from \"react\";\r\nimport {useContext} from 'react';\r\nimport FlightPubContext from \"../../store/FlightPubContext\";\r\n\r\nimport DropdownList from \"react-widgets/DropdownList\";\r\nimport {Button} from \"@mui/material\";\r\n\r\n\r\nfunction FlightList(props) {\r\n\r\n    const context = useContext(FlightPubContext);\r\n\r\n    const [flightList, setFlightList] = useState([]);\r\n    const [returnFlightList, setReturnFlightList] = useState([]);\r\n\r\n    const [morningFilter, setMorningFilter] = useState(false);\r\n    const [afternoonFilter, setAfternoonFilter] = useState(false);\r\n    const [eveningFilter, setEveningFilter] = useState(false);\r\n\r\n    const [flightSelected , setFlightSelected] = useState(false);\r\n    const [selectedFlight, setSelectedFlight] = useState([]);\r\n    const [returnFlightSelected, setReturnFlightSelected] = useState(false);\r\n    const [selectedReturnFlight, setSelectedReturnFlight] = useState([]);\r\n\r\n    let toggleMorningFilter = () =>\r\n    {\r\n        if(morningFilter)\r\n        {\r\n            setMorningFilter(false);\r\n            return;\r\n        }\r\n\r\n        setMorningFilter(true);\r\n        return;\r\n\r\n    }\r\n\r\n    let toggleAfternoonFilter = () =>\r\n    {\r\n        if(afternoonFilter)\r\n        {\r\n            setAfternoonFilter(false);\r\n            return;\r\n        }\r\n\r\n        setAfternoonFilter(true);\r\n        return;\r\n    }\r\n\r\n    let toggleEveningFilter = () =>\r\n    {\r\n        if(eveningFilter)\r\n        {\r\n            setEveningFilter(false);\r\n            return;\r\n        }\r\n\r\n        setEveningFilter(true);\r\n        return;\r\n    }\r\n\r\n    props.flights.map((el) =>\r\n    {\r\n        flightList.push(el);\r\n        returnFlightList.push(el);\r\n    });\r\n\r\n    if(flightSelected)\r\n    {\r\n        console.log(\"wow ur trip to is selected\");\r\n    }\r\n\r\n    if(returnFlightSelected)\r\n    {\r\n        console.log(\"wow way back selected\");\r\n    }\r\n\r\n    //struct to store flights in a reverse linkedList\r\n    //pattern for the multi-search algorithm\r\n    function makeFlightStruct(e)\r\n    {\r\n        var flightRefs = e.split(' ');\r\n\r\n\r\n        function constructor()\r\n        {\r\n            this[flightRefs[0]] = arguments[0];\r\n            this[flightRefs[1]] = arguments[1];\r\n        }\r\n        return constructor;\r\n    }\r\n\r\n    function multiSearch()\r\n    {\r\n        //todo\r\n        //create struct where each el has a ref to it's prev flightPoint except for the start of each search which uses null\r\n        //replace iterating through map to find matches with, iterating through returned database results\r\n        //\r\n        //flightList.length = 0;\r\n        //returnFlightList.length = 0;\r\n\r\n        var FlightPoint = makeFlightStruct(\"prev curr\");\r\n        var flightPoints = [];\r\n\r\n        var startIndex = 0;\r\n\r\n        props.flights.map((el) => {\r\n\r\n            flightPoints.length = 0;\r\n            //find next start point\r\n            if(el.departure.toLowerCase() == props.searchQuery.departureLocation.toLowerCase())\r\n            {\r\n                if(el.destination.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase())\r\n                {\r\n                    //add to flight list\r\n                    //don't include other results as they are meaningless and create a loop\r\n                }\r\n\r\n                flightPoints.push(new FlightPoint(null, el));\r\n            }\r\n\r\n            //search for flights from this node\r\n            props.flights.map((el2) => {\r\n                if(el2.departure.toLowerCase() == flightPoints[startIndex].curr.destination.toLowerCase())\r\n                {\r\n                    if(el2.destination.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase())\r\n                    {\r\n                        //add to search results\r\n                    }\r\n\r\n                    flightPoints.push(new FlightPoint(flightPoints[startIndex], el2));\r\n                }\r\n            })\r\n\r\n            startIndex++;\r\n            var endIndex = flightPoints.length;\r\n            for(var i = startIndex; i < endIndex; i++)\r\n            {\r\n                props.flights.map((el2) => {\r\n                    if(el2.departure.toLowerCase() == flightPoints[i].curr.destination.toLowerCase() &&\r\n                        el2.destination.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase())\r\n                    {\r\n                        //add flight to list\r\n                        flightPoints.push(new FlightPoint(flightPoints[i], el2));\r\n                    }\r\n                })\r\n            }\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    function searchFlightList()\r\n    {\r\n\r\n        flightList.length = 0;\r\n        returnFlightList.length = 0;\r\n\r\n        props.flights.map((el) =>\r\n        {\r\n\r\n            if(!props.searchQuery.flexibleDeparture)\r\n            {\r\n                if(el.destination.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase()\r\n                    && el.departure.toLowerCase() == props.searchQuery.departureLocation.toLowerCase()\r\n                    && el.departureDate.getFullYear() == props.searchQuery.soonestDepartureDate.getFullYear()\r\n                    && el.departureDate.getMonth() == props.searchQuery.soonestDepartureDate.getMonth()\r\n                    && el.departureDate.getDate() == props.searchQuery.soonestDepartureDate.getDate())\r\n                {\r\n                    if(!morningFilter && !afternoonFilter && !eveningFilter)\r\n                    {\r\n                        flightList.push(el);\r\n                    }\r\n\r\n                    if(morningFilter)\r\n                    {\r\n                        console.log(\"morning filter active\");\r\n\r\n                        if(el.departureDate.getHours() >= 0 && el.departureDate.getHours() < 12)\r\n                        {\r\n                            flightList.push(el);\r\n                        }\r\n\r\n                    }\r\n                    if(afternoonFilter)\r\n                    {\r\n                        if(el.departureDate.getHours() >= 12  && el.departureDate.getHours() < 18)\r\n                        {\r\n                            flightList.push(el);\r\n                        }\r\n                    }\r\n                    if(eveningFilter)\r\n                    {\r\n                        if(el.departureDate.getHours() >= 18)\r\n                        {\r\n                            flightList.push(el);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if(el.destination.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase()\r\n                    && el.departure.toLowerCase() == props.searchQuery.departureLocation.toLowerCase()\r\n                    && el.departureDate.getFullYear() >= props.searchQuery.soonestDepartureDate.getFullYear()\r\n                    && el.departureDate.getFullYear() <= props.searchQuery.latestDepartureDate.getFullYear()\r\n                    && el.departureDate.getMonth() >= props.searchQuery.soonestDepartureDate.getMonth()\r\n                    && el.departureDate.getMonth() <= props.searchQuery.latestDepartureDate.getMonth()\r\n                    && el.departureDate.getDate() >= props.searchQuery.soonestDepartureDate.getDate()\r\n                    && el.departureDate.getDate() <= props.searchQuery.latestDepartureDate.getDate())\r\n                {\r\n\r\n                    if(!morningFilter && !afternoonFilter && !eveningFilter)\r\n                    {\r\n                        flightList.push(el);\r\n                    }\r\n\r\n                    if(morningFilter)\r\n                    {\r\n                        if(el.departureDate.getHours() >= 0 && el.departureDate.getHours() < 12)\r\n                        {\r\n                            flightList.push(el);\r\n                        }\r\n                    }\r\n                    if(afternoonFilter)\r\n                    {\r\n                        if(el.departureDate.getHours() >= 12  && el.departureDate.getHours() < 18)\r\n                        {\r\n                            flightList.push(el);\r\n                        }\r\n                    }\r\n                    if(eveningFilter)\r\n                    {\r\n                        if(el.departureDate.getHours() >= 18)\r\n                        {\r\n                            flightList.push(el);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(!props.searchQuery.oneWayTrip) {\r\n                if (!props.searchQuery.flexibleReturn) {\r\n                    if (el.destination.toLowerCase() == props.searchQuery.departureLocation.toLowerCase()\r\n                        && el.departure.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase()\r\n                        && el.departureDate.getFullYear() == props.searchQuery.soonestReturnDate.getFullYear()\r\n                        && el.departureDate.getMonth() == props.searchQuery.soonestReturnDate.getMonth()\r\n                        && el.departureDate.getDate() == props.searchQuery.soonestReturnDate.getDate()) {\r\n                        if (!morningFilter && !afternoonFilter && !eveningFilter) {\r\n                            returnFlightList.push(el);\r\n                        }\r\n\r\n                        if (morningFilter) {\r\n                            if (el.departureDate.getHours() >= 0 && el.departureDate.getHours() < 12) {\r\n                                returnFlightList.push(el);\r\n                            }\r\n                        }\r\n                        if (afternoonFilter) {\r\n                            if (el.departureDate.getHours() >= 12 && el.departureDate.getHours() < 18) {\r\n                                returnFlightList.push(el);\r\n                            }\r\n                        }\r\n                        if (eveningFilter) {\r\n                            if (el.departureDate.getHours() >= 18) {\r\n                                returnFlightList.push(el);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (el.destination.toLowerCase() == props.searchQuery.departureLocation.toLowerCase()\r\n                        && el.departure.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase()\r\n                        && el.departureDate.getFullYear() >= props.searchQuery.soonestReturnDate.getFullYear()\r\n                        && el.departureDate.getFullYear() <= props.searchQuery.latestReturnDate.getFullYear()\r\n                        && el.departureDate.getMonth() >= props.searchQuery.soonestReturnDate.getMonth()\r\n                        && el.departureDate.getMonth() <= props.searchQuery.latestReturnDate.getMonth()\r\n                        && el.departureDate.getDate() >= props.searchQuery.soonestReturnDate.getDate()\r\n                        && el.departureDate.getDate() <= props.searchQuery.latestReturnDate.getDate()) {\r\n\r\n                        if (!morningFilter && !afternoonFilter && !eveningFilter) {\r\n                            returnFlightList.push(el);\r\n                        }\r\n\r\n                        if (morningFilter) {\r\n                            if (el.departureDate.getHours() >= 0 && el.departureDate.getHours() < 12) {\r\n                                returnFlightList.push(el);\r\n                            }\r\n                        }\r\n                        if (afternoonFilter) {\r\n                            if (el.departureDate.getHours() >= 12 && el.departureDate.getHours() < 18) {\r\n                                returnFlightList.push(el);\r\n                            }\r\n                        }\r\n                        if (eveningFilter) {\r\n                            if (el.departureDate.getHours() >= 18) {\r\n                                returnFlightList.push(el);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    function sort(e)\r\n    {\r\n        if(e == \"soonest\")\r\n        {\r\n            for(let i = 0; i < flightList.length; i++)\r\n            {\r\n                for(let j = 0; j < flightList.length - i - 1; j++)\r\n                {\r\n                    if(flightList[j+1].departureDate < flightList[j].departureDate)\r\n                    {\r\n                        [flightList[j+1], flightList[j]] = [flightList[j], flightList[j+1]];\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(let i = 0; i < returnFlightList.length; i++)\r\n            {\r\n                for(let j = 0; j < returnFlightList.length - i - 1; j++)\r\n                {\r\n                    if(returnFlightList[j+1].departureDate < returnFlightList[j].departureDate)\r\n                    {\r\n                        [returnFlightList[j+1], returnFlightList[j]] = [returnFlightList[j], returnFlightList[j+1]];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if(e == \"latest\")\r\n        {\r\n            for(let i = 0; i < flightList.length; i++)\r\n            {\r\n                for(let j = 0; j < flightList.length - i - 1; j++)\r\n                {\r\n                    if(flightList[j+1].departureDate > flightList[j].departureDate)\r\n                    {\r\n                        [flightList[j+1], flightList[j]] = [flightList[j], flightList[j+1]];\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(let i = 0; i < returnFlightList.length; i++)\r\n            {\r\n                for(let j = 0; j < returnFlightList.length - i - 1; j++)\r\n                {\r\n                    if(returnFlightList[j+1].departureDate > returnFlightList[j].departureDate)\r\n                    {\r\n                        [returnFlightList[j+1], returnFlightList[j]] = [returnFlightList[j], returnFlightList[j+1]];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if(e == \"lowest price\")\r\n        {\r\n            for(let i = 0; i < flightList.length; i++)\r\n            {\r\n                for(let j = 0; j < flightList.length - i - 1; j++)\r\n                {\r\n                    if(flightList[j+1].price < flightList[j].price)\r\n                    {\r\n                        [flightList[j+1], flightList[j]] = [flightList[j], flightList[j+1]];\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(let i = 0; i < returnFlightList.length; i++)\r\n            {\r\n                for(let j = 0; j < returnFlightList.length - i - 1; j++)\r\n                {\r\n                    if(returnFlightList[j+1].price < returnFlightList[j].price)\r\n                    {\r\n                        [returnFlightList[j+1], returnFlightList[j]] = [returnFlightList[j], returnFlightList[j+1]];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if(e == \"highest price\")\r\n        {\r\n            for(let i = 0; i < flightList.length; i++)\r\n            {\r\n                for(let j = 0; j < flightList.length - i - 1; j++)\r\n                {\r\n                    if(flightList[j+1].price > flightList[j].price)\r\n                    {\r\n                        [flightList[j+1], flightList[j]] = [flightList[j], flightList[j+1]];\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(let i = 0; i < returnFlightList.length; i++)\r\n            {\r\n                for(let j = 0; j < returnFlightList.length - i - 1; j++)\r\n                {\r\n                    if(returnFlightList[j+1].price > returnFlightList[j].price)\r\n                    {\r\n                        [returnFlightList[j+1], returnFlightList[j]] = [returnFlightList[j], returnFlightList[j+1]];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function Return()\r\n    {\r\n        if(props.searchQuery.oneWayTrip)\r\n        {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n          <div>\r\n              <h2>Return Trip</h2>\r\n\r\n              <table className={classes.tableList}>\r\n                  <tr>\r\n                      <th>Flight</th>\r\n                      <th>Departure</th>\r\n                      <th>Destination</th>\r\n                      <th>Date</th>\r\n                      <th>Dep</th>\r\n                      <th>Arr</th>\r\n                      <th></th>\r\n                      <th></th>\r\n                  </tr>\r\n                  <tbody>\r\n                  {returnFlightList.map((flight) => (\r\n                      <FlightItem\r\n                          key={flight.flightId}\r\n                          flightId={flight.flightId}\r\n                          departureDate={flight.departureDate.getDate() + \"/\" + (flight.departureDate.getMonth() + 1)+ \"/\" + flight.departureDate.getFullYear()}\r\n                          departureTime={flight.departureTime}\r\n                          arrivalTime={flight.arrivalTime}\r\n                          destination={flight.destination}\r\n                          departure={flight.departure}\r\n                          price={flight.price}\r\n                          return={true}\r\n                          selectedId={selectedReturnFlight.length > 0 ? selectedReturnFlight[0].flightId : \"\"}\r\n                          selectFlight={res => res == true ? setReturnFlightSelected(true) : setFlightSelected(true)}\r\n                          selFlight={res => setSelectedReturnFlight(res)}\r\n                      />\r\n\r\n                  ))}\r\n                  </tbody>\r\n              </table>\r\n          </div>\r\n        );\r\n    }\r\n\r\n    function bookingFlightHandler()\r\n    {\r\n        const flightArr = [];\r\n\r\n        if(props.searchQuery.oneWayTrip)\r\n        {\r\n\r\n           if(flightSelected)\r\n           {\r\n               selectedFlight.map((flight) =>\r\n               {\r\n                   flightArr.push(flight);\r\n               })\r\n\r\n               //move onto next phase\r\n\r\n               context.setBookingsSelected(true);\r\n               console.log(context.bookingsSelected);\r\n               props.exportFlights(flightArr);\r\n               return;\r\n           }\r\n        }\r\n        else\r\n        {\r\n            if(flightSelected && returnFlightSelected)\r\n            {\r\n                selectedFlight.map((flight) =>\r\n                {\r\n                    flightArr.push(flight);\r\n                })\r\n                selectedReturnFlight.map((flight) =>\r\n                {\r\n                    flightArr.push(flight);\r\n                })\r\n\r\n                context.setBookingsSelected(true);\r\n                console.log(context.bookingsSelected);\r\n                props.exportFlights(flightArr);\r\n                return;\r\n            }\r\n        }\r\n\r\n        //some error has occured\r\n        console.log(\"you have not selected a return or departure flights\");\r\n        return;\r\n    }\r\n\r\n    multiSearch();\r\n    searchFlightList();\r\n    sort(\"latest\");\r\n\r\n    //what do need\r\n    //filters\r\n    //sort by\r\n\r\n    //\r\n\r\n\r\n    return (\r\n\r\n        <Card>\r\n            <h2>Trip to Destination</h2>\r\n\r\n\r\n            <div className={classes.list}>\r\n\r\n                <label htmlFor='morningDeparture'> Morning Departure </label>\r\n                <input type='checkbox' id='morningDeparture' onClick={toggleMorningFilter} />\r\n\r\n                <label htmlFor='afternoonDeparture'> Afternoon Departure </label>\r\n                <input type='checkbox' id='afternoonDeparture' onClick={toggleAfternoonFilter} />\r\n\r\n                <label htmlFor='eveningDeparture'> Evening Departure </label>\r\n                <input type='checkbox' id='eveningDeparture' onClick={toggleEveningFilter}/>\r\n            </div>\r\n\r\n            <table className={classes.tableList}>\r\n                <tr>\r\n                    <th>Flight</th>\r\n                    <th>Departure</th>\r\n                    <th>Destination</th>\r\n                    <th>Date</th>\r\n                    <th>Dep</th>\r\n                    <th>Arr</th>\r\n                    <th></th>\r\n                    <th></th>\r\n                </tr>\r\n                <tbody>\r\n                    {flightList.map((flight) => (\r\n                        <FlightItem\r\n                            key={flight.flightId}\r\n                            flightId={flight.flightId}\r\n                            departureDate={flight.departureDate.getDate() + \"/\" + (flight.departureDate.getMonth() + 1)+ \"/\" + flight.departureDate.getFullYear()}\r\n                            departureTime={flight.departureTime}\r\n                            arrivalTime={flight.arrivalTime}\r\n                            destination={flight.destination}\r\n                            departure={flight.departure}\r\n                            price={flight.price}\r\n                            selectedId={selectedFlight.length > 0 ? selectedFlight[0].flightId : \"\"}\r\n                            return={false}\r\n                            selectFlight={res => res == true ? setReturnFlightSelected(true) : setFlightSelected(true)}\r\n                            selFlight={res => setSelectedFlight(res)}\r\n                        />\r\n\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            <Return />\r\n\r\n\r\n            <button className={classes.submitButt} onClick={bookingFlightHandler}>\r\n                Book Flights\r\n            </button>\r\n\r\n        </Card>\r\n\r\n    );\r\n}\r\n\r\nexport default FlightList;"]},"metadata":{},"sourceType":"module"}