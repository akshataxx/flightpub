{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ewart\\\\OneDrive\\\\Documents\\\\GitHub\\\\flightpub\\\\client\\\\src\\\\frontEnd\\\\components\\\\flights\\\\FlightList.js\",\n    _s = $RefreshSig$();\n\nimport FlightItem from './FlightItem';\nimport classes from './FlightList.module.css';\nimport Card from \"../ui/Card\";\nimport { useState } from \"react\";\nimport { useContext } from 'react';\nimport FlightPubContext from \"../../store/FlightPubContext\";\nimport DropdownList from \"react-widgets/DropdownList\";\nimport { Button } from \"@mui/material\";\nimport MultiFlightItem from \"./MultiFlightItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FlightList(props) {\n  _s();\n\n  const context = useContext(FlightPubContext);\n  const [flightList, setFlightList] = useState([]);\n  const [returnFlightList, setReturnFlightList] = useState([]);\n  const [flightSelected, setFlightSelected] = useState(false);\n  const [selectedFlight, setSelectedFlight] = useState([]);\n  const [returnFlightSelected, setReturnFlightSelected] = useState(false);\n  const [selectedReturnFlight, setSelectedReturnFlight] = useState([]); //filter details\n\n  const [morningFilter, setMorningFilter] = useState(false);\n  const [afternoonFilter, setAfternoonFilter] = useState(false);\n  const [eveningFilter, setEveningFilter] = useState(false); //filter functions\n\n  let toggleMorningFilter = () => {\n    if (morningFilter) {\n      setMorningFilter(false);\n      return;\n    }\n\n    setMorningFilter(true);\n    return;\n  };\n\n  let toggleAfternoonFilter = () => {\n    if (afternoonFilter) {\n      setAfternoonFilter(false);\n      return;\n    }\n\n    setAfternoonFilter(true);\n    return;\n  };\n\n  let toggleEveningFilter = () => {\n    if (eveningFilter) {\n      setEveningFilter(false);\n      return;\n    }\n\n    setEveningFilter(true);\n    return;\n  }; //\n\n\n  props.flights.map(el => {\n    flightList.push(el);\n    returnFlightList.push(el);\n  });\n\n  if (flightSelected) {//console.log(\"wow ur trip to is selected\");\n  }\n\n  if (returnFlightSelected) {//console.log(\"wow way back selected\");\n  } //struct to store flights in a reverse linkedList\n  //pattern for the multi-search algorithm\n\n\n  function makeFlightStruct(e) {\n    var flightRefs = e.split(' ');\n\n    function constructor() {\n      this[flightRefs[0]] = arguments[0];\n      this[flightRefs[1]] = arguments[1];\n    }\n\n    return constructor;\n  }\n\n  function multiSearch() {\n    //todo\n    //create struct where each el has a ref to it's prev flightPoint except for the start of each search which uses null\n    //replace iterating through map to find matches with, iterating through returned database results\n    //\n    //flightList.length = 0;\n    //returnFlightList.length = 0;\n    var FlightPoint = makeFlightStruct(\"prev curr\");\n    var flightPoints = [];\n    flightList.length = 0;\n    returnFlightList.length = 0;\n    var startIndex = 0;\n    props.flights.map(el => {\n      startIndex = 0;\n      flightPoints.length = 0; //find next start point\n\n      if (el.departure.toLowerCase() == props.searchQuery.departureLocation.toLowerCase()) {\n        var validTime = false;\n\n        if (!props.searchQuery.flexibleDeparture && el.departureDate.getFullYear() == props.searchQuery.soonestDepartureDate.getFullYear() && el.departureDate.getMonth() == props.searchQuery.soonestDepartureDate.getMonth() && el.departureDate.getDate() == props.searchQuery.soonestDepartureDate.getDate() || props.searchQuery.flexibleDeparture && el.departureDate.getFullYear() >= props.searchQuery.soonestDepartureDate.getFullYear() && el.departureDate.getFullYear() <= props.searchQuery.latestDepartureDate.getFullYear() && el.departureDate.getMonth() >= props.searchQuery.soonestDepartureDate.getMonth() && el.departureDate.getMonth() <= props.searchQuery.latestDepartureDate.getMonth() && el.departureDate.getDate() >= props.searchQuery.soonestDepartureDate.getDate() && el.departureDate.getDate() <= props.searchQuery.latestDepartureDate.getDate()) {\n          if (!morningFilter && !afternoonFilter && !eveningFilter) {\n            validTime = true;\n          } else if (morningFilter && el.departureDate.getHours() >= 0 && el.departureDate.getHours() < 12 || afternoonFilter && el.departureDate.getHours() >= 12 && el.departureDate.getHours() < 18 || eveningFilter && el.departureDate.getHours() >= 18) {\n            validTime = true;\n          }\n        }\n\n        if (validTime) {\n          if (el.destination.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase()) {\n            //add to flight list\n            flightList.push([el]); //don't include other results as they are meaningless and create a loop\n          } else {\n            var tempP = new FlightPoint(null, el);\n            flightPoints.push(tempP); //search for flights from this node\n\n            props.flights.map(el2 => {\n              if (el2.departure.toLowerCase() == flightPoints[startIndex].curr.destination.toLowerCase()) {\n                //check flight occurs after last flight\n                validTime = false;\n                var dayAfter = new Date();\n                dayAfter.setDate(el.departureDate.getDate() + 1);\n\n                if (el.departureDate.getFullYear() == el2.departureDate.getFullYear() && el.departureDate.getMonth() == el2.departureDate.getMonth() && el.departureDate.getDate() == el2.departureDate.getDate() || dayAfter.getFullYear() == el2.departureDate.getFullYear() && dayAfter.getMonth() == el2.departureDate.getMonth() && dayAfter.getDate() == el2.departureDate.getDate()) {\n                  validTime = true;\n                }\n\n                if (validTime) {\n                  if (el2.destination.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase()) {\n                    flightList.push([el, el2]); //add to search results\n                    //don't search further due to loop\n                  } else {\n                    flightPoints.push(new FlightPoint(flightPoints[startIndex], el2));\n                  }\n                }\n              }\n            });\n            startIndex++;\n            var endIndex = flightPoints.length;\n\n            for (var i = startIndex; i < endIndex; i++) {\n              props.flights.map(el2 => {\n                if (el2.departure.toLowerCase() == flightPoints[i].curr.destination.toLowerCase() && el2.destination.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase()) {\n                  //check if flight occurs after last flight\n                  validTime = false;\n                  var dayAfter = new Date();\n                  dayAfter.setDate(flightPoints[i].curr.departureDate.getDate() + 1);\n\n                  if (flightPoints[i].curr.departureDate.getFullYear() == el2.departureDate.getFullYear() && flightPoints[i].curr.departureDate.getMonth() == el2.departureDate.getMonth() && flightPoints[i].curr.departureDate.getDate() == el2.departureDate.getDate() || dayAfter.getFullYear() == el2.departureDate.getFullYear() && dayAfter.getMonth() == el2.departureDate.getMonth() && dayAfter.getDate() == el2.departureDate.getDate()) {\n                    validTime = true;\n                  }\n\n                  if (validTime) {\n                    //add flight to list\n                    flightList.push([el, flightPoints[i].curr, el2]);\n                    flightPoints.push(new FlightPoint(flightPoints[i], el2));\n                  }\n                }\n              });\n            }\n          }\n        }\n      }\n    }); //return trip details\n\n    if (!props.searchQuery.oneWayTrip) {\n      startIndex = 0;\n      props.flights.map(el => {\n        startIndex = 0;\n        flightPoints.length = 0; //find next start point\n\n        if (el.departure.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase()) {\n          var validTime = false;\n\n          if (!props.searchQuery.flexibleReturn && el.departureDate.getFullYear() == props.searchQuery.soonestReturnDate.getFullYear() && el.departureDate.getMonth() == props.searchQuery.soonestReturnDate.getMonth() && el.departureDate.getDate() == props.searchQuery.soonestReturnDate.getDate() || props.searchQuery.flexibleReturn && el.departureDate.getFullYear() >= props.searchQuery.soonestReturnDate.getFullYear() && el.departureDate.getFullYear() <= props.searchQuery.latestReturnDate.getFullYear() && el.departureDate.getMonth() >= props.searchQuery.soonestReturnDate.getMonth() && el.departureDate.getMonth() <= props.searchQuery.latestReturnDate.getMonth() && el.departureDate.getDate() >= props.searchQuery.soonestReturnDate.getDate() && el.departureDate.getDate() <= props.searchQuery.latestReturnDate.getDate()) {\n            if (!morningFilter && !afternoonFilter && !eveningFilter) {\n              validTime = true;\n            } else if (morningFilter && el.departureDate.getHours() >= 0 && el.departureDate.getHours() < 12 || afternoonFilter && el.departureDate.getHours() >= 12 && el.departureDate.getHours() < 18 || eveningFilter && el.departureDate.getHours() >= 18) {\n              validTime = true;\n            }\n          }\n\n          if (validTime) {\n            if (el.destination.toLowerCase() == props.searchQuery.departureLocation.toLowerCase()) {\n              //add to flight list\n              returnFlightList.push([el]); //don't include other results as they are meaningless and create a loop\n            } else {\n              flightPoints.push(new FlightPoint(null, el)); //search for flights from this node\n\n              props.flights.map(el2 => {\n                if (el2.departure.toLowerCase() == flightPoints[startIndex].curr.destination.toLowerCase()) {\n                  //check flight occurs after last flight\n                  validTime = false;\n                  var dayAfter = new Date();\n                  dayAfter.setDate(el.departureDate.getDate() + 1);\n\n                  if (el.departureDate.getFullYear() == el2.departureDate.getFullYear() && el.departureDate.getMonth() == el2.departureDate.getMonth() && el.departureDate.getDate() == el2.departureDate.getDate() || dayAfter.getFullYear() == el2.departureDate.getFullYear() && dayAfter.getMonth() == el2.departureDate.getMonth() && dayAfter.getDate() == el2.departureDate.getDate()) {\n                    validTime = true;\n                  }\n\n                  if (validTime) {\n                    if (el2.destination.toLowerCase() == props.searchQuery.departureLocation.toLowerCase()) {\n                      returnFlightList.push([el, el2]); //add to search results\n                      //don't search further due to loop\n                    } else {\n                      flightPoints.push(new FlightPoint(flightPoints[startIndex], el2));\n                    }\n                  }\n                }\n              });\n              startIndex++;\n              var endIndex = flightPoints.length;\n\n              for (var i = startIndex; i < endIndex; i++) {\n                props.flights.map(el2 => {\n                  if (el2.departure.toLowerCase() == flightPoints[i].curr.destination.toLowerCase() && el2.destination.toLowerCase() == props.searchQuery.departureLocation.toLowerCase()) {\n                    //check if flight occurs after last flight\n                    validTime = false;\n                    var dayAfter = new Date();\n                    dayAfter.setDate(flightPoints[i].curr.departureDate.getDate() + 1);\n\n                    if (flightPoints[i].curr.departureDate.getFullYear() == el2.departureDate.getFullYear() && flightPoints[i].curr.departureDate.getMonth() == el2.departureDate.getMonth() && flightPoints[i].curr.departureDate.getDate() == el2.departureDate.getDate() || dayAfter.getFullYear() == el2.departureDate.getFullYear() && dayAfter.getMonth() == el2.departureDate.getMonth() && dayAfter.getDate() == el2.departureDate.getDate()) {\n                      validTime = true;\n                    }\n\n                    if (validTime) {\n                      //add flight to list\n                      returnFlightList.push([el, flightPoints[i].curr, el2]);\n                      flightPoints.push(new FlightPoint(flightPoints[i], el2));\n                    }\n                  }\n                });\n              }\n            }\n          }\n        }\n      });\n    }\n  }\n\n  function sort(e) {\n    //og(e);\n    if (e == \"soonest\") {\n      for (let i = 0; i < flightList.length; i++) {\n        for (let j = 0; j < flightList.length - i - 1; j++) {\n          if (flightList[j + 1][0].departureDate < flightList[j][0].departureDate) {\n            [flightList[j + 1], flightList[j]] = [flightList[j], flightList[j + 1]];\n          }\n        }\n      }\n\n      for (let i = 0; i < returnFlightList.length; i++) {\n        for (let j = 0; j < returnFlightList.length - i - 1; j++) {\n          if (returnFlightList[j + 1][0].departureDate < returnFlightList[j][0].departureDate) {\n            [returnFlightList[j + 1], returnFlightList[j]] = [returnFlightList[j], returnFlightList[j + 1]];\n          }\n        }\n      }\n    }\n  }\n\n  function Return() {\n    if (props.searchQuery.oneWayTrip) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Return Trip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: classes.tableList,\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Flight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Departure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Destination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Dep\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Arr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sponsored\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: returnFlightList.map(flightDetails => /*#__PURE__*/_jsxDEV(MultiFlightItem, {\n            flightPackage: flightDetails,\n            selectedFlights: selectedReturnFlight,\n            return: true,\n            selectFlight: res => res == true ? setReturnFlightSelected(true) : setFlightSelected(true),\n            selFlight: res => setSelectedReturnFlight(res)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 11\n    }, this);\n  }\n\n  function bookingFlightHandler() {\n    const flightArr = [];\n\n    if (props.searchQuery.oneWayTrip) {\n      if (flightSelected) {\n        selectedFlight.map(flight => {\n          //console.log(flight);\n          flightArr.push(flight);\n        }); //move onto next phase\n\n        context.setBookingsSelected(true); //console.log(context.bookingsSelected);\n\n        props.exportFlights(flightArr);\n        return;\n      }\n    } else {\n      if (flightSelected && returnFlightSelected) {\n        selectedFlight.map(flight => {\n          flightArr.push(flight);\n        });\n        selectedReturnFlight.map(flight => {\n          flightArr.push(flight);\n        });\n        context.setBookingsSelected(true); //console.log(context.bookingsSelected);\n\n        props.exportFlights(flightArr);\n        return;\n      }\n    } //some error has occured\n    //console.log(\"you have not selected a return or departure flights\");\n\n\n    return;\n  }\n\n  function swap(arr, i, j) {\n    [arr[j], arr[i]] = [arr[i], arr[j]];\n  }\n\n  function partition(arr, lowBound, highBound) {\n    var highCount = 0;\n\n    for (let h = 0; h < arr[highBound].length; h++) {\n      if (arr[highBound][h].sponsored == true) {\n        highCount += 1;\n      }\n    }\n\n    let piv = highCount;\n    let i = lowBound - 1;\n\n    for (let j = lowBound; j <= highBound - 1; j++) {\n      var jCount = 0;\n\n      for (let h = 0; h < arr[j].length; h++) {\n        if (arr[j][h].sponsored == true) {\n          jCount += 1;\n        }\n      }\n\n      if (jCount > piv) {\n        i++;\n        swap(arr, i, j);\n      }\n    }\n\n    swap(arr, i + 1, highBound);\n    return i + 1;\n  }\n\n  function quickSort(arr, low, high) {\n    if (low < high) {\n      let partIndex = partition(arr, low, high);\n      quickSort(arr, low, partIndex - 1);\n      quickSort(arr, partIndex + 1, high);\n    }\n  }\n\n  function sponsoredSort(arr) {\n    quickSort(arr, 0, arr.length - 1);\n    /*for(let i = 0; i < arr.length; i++)\r\n    {\r\n        for(let j = 0; j < arr.length - i - 1; j++)\r\n        {\r\n            var nextSponsoredCount = 0;\r\n            var thisSponsoredCount = 0;\r\n                for(let h = 0; h < arr[j + i].length; h++)\r\n            {\r\n                if(arr[j + 1][h].sponsored == true)\r\n                {\r\n                    nextSponsoredCount += 1;\r\n                }\r\n            }\r\n              for(let h = 0; h < arr[j].length; h++)\r\n            {\r\n                if(arr[j][h].sponsored == true)\r\n                {\r\n                    thisSponsoredCount += 1;\r\n                }\r\n            }\r\n              if(nextSponsoredCount > thisSponsoredCount)\r\n            {\r\n                [arr[j+1], arr[j]] = [arr[j], arr[j+1]];\r\n            }\r\n        }\r\n    }*/\n  }\n\n  multiSearch(); //searchFlightList();\n  //sort(\"latest\");\n\n  sponsoredSort(flightList);\n  sponsoredSort(returnFlightList);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Trip to Destination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.list,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"morningDeparture\",\n        children: \" Morning Departure \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"morningDeparture\",\n        onClick: toggleMorningFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"afternoonDeparture\",\n        children: \" Afternoon Departure \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"afternoonDeparture\",\n        onClick: toggleAfternoonFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"eveningDeparture\",\n        children: \" Evening Departure \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"eveningDeparture\",\n        onClick: toggleEveningFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: classes.tableList,\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Flight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Departure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Dep\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Arr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Favourite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Sponsored\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: flightList.map(flightDetails => /*#__PURE__*/_jsxDEV(MultiFlightItem, {\n          flightPackage: flightDetails,\n          selectedFlights: selectedFlight,\n          return: false,\n          selectFlight: res => res == true ? setReturnFlightSelected(true) : setFlightSelected(true),\n          selFlight: res => setSelectedFlight(res)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Return, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.submitButt,\n      onClick: bookingFlightHandler,\n      children: \"Book Flights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 573,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FlightList, \"LgS19a2ZnZR64H5tgn15ikncyYk=\");\n\n_c = FlightList;\nexport default FlightList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FlightList\");","map":{"version":3,"sources":["C:/Users/ewart/OneDrive/Documents/GitHub/flightpub/client/src/frontEnd/components/flights/FlightList.js"],"names":["FlightItem","classes","Card","useState","useContext","FlightPubContext","DropdownList","Button","MultiFlightItem","FlightList","props","context","flightList","setFlightList","returnFlightList","setReturnFlightList","flightSelected","setFlightSelected","selectedFlight","setSelectedFlight","returnFlightSelected","setReturnFlightSelected","selectedReturnFlight","setSelectedReturnFlight","morningFilter","setMorningFilter","afternoonFilter","setAfternoonFilter","eveningFilter","setEveningFilter","toggleMorningFilter","toggleAfternoonFilter","toggleEveningFilter","flights","map","el","push","makeFlightStruct","e","flightRefs","split","constructor","arguments","multiSearch","FlightPoint","flightPoints","length","startIndex","departure","toLowerCase","searchQuery","departureLocation","validTime","flexibleDeparture","departureDate","getFullYear","soonestDepartureDate","getMonth","getDate","latestDepartureDate","getHours","destination","destinationLocation","tempP","el2","curr","dayAfter","Date","setDate","endIndex","i","oneWayTrip","flexibleReturn","soonestReturnDate","latestReturnDate","sort","j","Return","tableList","flightDetails","res","bookingFlightHandler","flightArr","flight","setBookingsSelected","exportFlights","swap","arr","partition","lowBound","highBound","highCount","h","sponsored","piv","jCount","quickSort","low","high","partIndex","sponsoredSort","list","submitButt"],"mappings":"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","sourcesContent":["import FlightItem from './FlightItem';\r\nimport classes from './FlightList.module.css';\r\nimport Card from \"../ui/Card\";\r\nimport {useState} from \"react\";\r\nimport {useContext} from 'react';\r\nimport FlightPubContext from \"../../store/FlightPubContext\";\r\n\r\nimport DropdownList from \"react-widgets/DropdownList\";\r\nimport {Button} from \"@mui/material\";\r\nimport MultiFlightItem from \"./MultiFlightItem\";\r\n\r\n\r\nfunction FlightList(props) {\r\n\r\n    const context = useContext(FlightPubContext);\r\n\r\n    const [flightList, setFlightList] = useState([]);\r\n    const [returnFlightList, setReturnFlightList] = useState([]);\r\n\r\n    const [flightSelected , setFlightSelected] = useState(false);\r\n    const [selectedFlight, setSelectedFlight] = useState([]);\r\n    const [returnFlightSelected, setReturnFlightSelected] = useState(false);\r\n    const [selectedReturnFlight, setSelectedReturnFlight] = useState([]);\r\n\r\n    //filter details\r\n    const [morningFilter, setMorningFilter] = useState(false);\r\n    const [afternoonFilter, setAfternoonFilter] = useState(false);\r\n    const [eveningFilter, setEveningFilter] = useState(false);\r\n\r\n    //filter functions\r\n    let toggleMorningFilter = () =>\r\n    {\r\n        if(morningFilter)\r\n        {\r\n            setMorningFilter(false);\r\n            return;\r\n        }\r\n\r\n        setMorningFilter(true);\r\n        return;\r\n\r\n    }\r\n\r\n    let toggleAfternoonFilter = () =>\r\n    {\r\n        if(afternoonFilter)\r\n        {\r\n            setAfternoonFilter(false);\r\n            return;\r\n        }\r\n\r\n        setAfternoonFilter(true);\r\n        return;\r\n    }\r\n\r\n    let toggleEveningFilter = () =>\r\n    {\r\n        if(eveningFilter)\r\n        {\r\n            setEveningFilter(false);\r\n            return;\r\n        }\r\n\r\n        setEveningFilter(true);\r\n        return;\r\n    }\r\n\r\n    //\r\n\r\n    props.flights.map((el) =>\r\n    {\r\n        flightList.push(el);\r\n        returnFlightList.push(el);\r\n    });\r\n\r\n    if(flightSelected)\r\n    {\r\n        //console.log(\"wow ur trip to is selected\");\r\n    }\r\n\r\n    if(returnFlightSelected)\r\n    {\r\n        //console.log(\"wow way back selected\");\r\n    }\r\n\r\n    //struct to store flights in a reverse linkedList\r\n    //pattern for the multi-search algorithm\r\n    function makeFlightStruct(e)\r\n    {\r\n        var flightRefs = e.split(' ');\r\n\r\n\r\n        function constructor()\r\n        {\r\n            this[flightRefs[0]] = arguments[0];\r\n            this[flightRefs[1]] = arguments[1];\r\n        }\r\n        return constructor;\r\n    }\r\n\r\n    function multiSearch()\r\n    {\r\n        //todo\r\n        //create struct where each el has a ref to it's prev flightPoint except for the start of each search which uses null\r\n        //replace iterating through map to find matches with, iterating through returned database results\r\n        //\r\n        //flightList.length = 0;\r\n        //returnFlightList.length = 0;\r\n\r\n        var FlightPoint = makeFlightStruct(\"prev curr\");\r\n        var flightPoints = [];\r\n\r\n        flightList.length = 0;\r\n        returnFlightList.length = 0;\r\n\r\n        var startIndex = 0;\r\n\r\n        props.flights.map((el) => {\r\n\r\n            startIndex = 0;\r\n            flightPoints.length = 0;\r\n            //find next start point\r\n\r\n            if(el.departure.toLowerCase() == props.searchQuery.departureLocation.toLowerCase())\r\n            {\r\n                var validTime = false;\r\n                if(!props.searchQuery.flexibleDeparture\r\n                    && el.departureDate.getFullYear() == props.searchQuery.soonestDepartureDate.getFullYear()\r\n                    && el.departureDate.getMonth() == props.searchQuery.soonestDepartureDate.getMonth()\r\n                    && el.departureDate.getDate() == props.searchQuery.soonestDepartureDate.getDate()\r\n                    || props.searchQuery.flexibleDeparture\r\n                    && el.departureDate.getFullYear() >= props.searchQuery.soonestDepartureDate.getFullYear()\r\n                    && el.departureDate.getFullYear() <= props.searchQuery.latestDepartureDate.getFullYear()\r\n                    && el.departureDate.getMonth() >= props.searchQuery.soonestDepartureDate.getMonth()\r\n                    && el.departureDate.getMonth() <= props.searchQuery.latestDepartureDate.getMonth()\r\n                    && el.departureDate.getDate() >= props.searchQuery.soonestDepartureDate.getDate()\r\n                    && el.departureDate.getDate() <= props.searchQuery.latestDepartureDate.getDate())\r\n                {\r\n                    if(!morningFilter && !afternoonFilter && !eveningFilter)\r\n                    {\r\n                        validTime = true;\r\n                    }\r\n                    else if(morningFilter && el.departureDate.getHours() >= 0 && el.departureDate.getHours() < 12\r\n                        || afternoonFilter && el.departureDate.getHours() >= 12 && el.departureDate.getHours() < 18\r\n                        || eveningFilter && el.departureDate.getHours() >= 18)\r\n                    {\r\n                        validTime = true;\r\n                    }\r\n                }\r\n\r\n                if(validTime)\r\n                {\r\n                    if(el.destination.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase())\r\n                    {\r\n                        //add to flight list\r\n                        flightList.push([el])\r\n                        //don't include other results as they are meaningless and create a loop\r\n                    }\r\n                    else\r\n                    {\r\n                        var tempP = new FlightPoint(null, el);\r\n\r\n                        flightPoints.push(tempP);\r\n\r\n                        //search for flights from this node\r\n                        props.flights.map((el2) => {\r\n                            if(el2.departure.toLowerCase() == flightPoints[startIndex].curr.destination.toLowerCase())\r\n                            {\r\n                                //check flight occurs after last flight\r\n                                validTime = false;\r\n                                var dayAfter = new Date();\r\n                                dayAfter.setDate(el.departureDate.getDate() + 1);\r\n\r\n                                if(el.departureDate.getFullYear() == el2.departureDate.getFullYear()\r\n                                    && el.departureDate.getMonth() == el2.departureDate.getMonth()\r\n                                    && el.departureDate.getDate() == el2.departureDate.getDate()\r\n                                    ||\r\n                                    dayAfter.getFullYear() == el2.departureDate.getFullYear()\r\n                                    && dayAfter.getMonth() == el2.departureDate.getMonth()\r\n                                    && dayAfter.getDate() == el2.departureDate.getDate())\r\n                                {\r\n                                    validTime = true;\r\n                                }\r\n\r\n                                if(validTime)\r\n                                {\r\n                                    if(el2.destination.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase())\r\n                                    {\r\n                                        flightList.push([el, el2])\r\n                                        //add to search results\r\n                                        //don't search further due to loop\r\n                                    }\r\n                                    else\r\n                                    {\r\n                                        flightPoints.push(new FlightPoint(flightPoints[startIndex], el2));\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n\r\n                        startIndex++;\r\n                        var endIndex = flightPoints.length;\r\n                        for(var i = startIndex; i < endIndex; i++)\r\n                        {\r\n                            props.flights.map((el2) => {\r\n\r\n                                if(el2.departure.toLowerCase() == flightPoints[i].curr.destination.toLowerCase() &&\r\n                                    el2.destination.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase())\r\n                                {\r\n                                    //check if flight occurs after last flight\r\n                                    validTime = false;\r\n                                    var dayAfter = new Date();\r\n                                    dayAfter.setDate(flightPoints[i].curr.departureDate.getDate() + 1);\r\n\r\n                                    if(flightPoints[i].curr.departureDate.getFullYear() == el2.departureDate.getFullYear()\r\n                                        && flightPoints[i].curr.departureDate.getMonth() == el2.departureDate.getMonth()\r\n                                        && flightPoints[i].curr.departureDate.getDate() == el2.departureDate.getDate()\r\n                                        ||\r\n                                        dayAfter.getFullYear() == el2.departureDate.getFullYear()\r\n                                        && dayAfter.getMonth() == el2.departureDate.getMonth()\r\n                                        && dayAfter.getDate() == el2.departureDate.getDate())\r\n                                    {\r\n                                        validTime = true;\r\n                                    }\r\n\r\n                                    if(validTime)\r\n                                    {\r\n                                        //add flight to list\r\n                                        flightList.push([el, flightPoints[i].curr, el2]);\r\n                                        flightPoints.push(new FlightPoint(flightPoints[i], el2));\r\n                                    }\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n        }\r\n\r\n\r\n        })\r\n\r\n        //return trip details\r\n        if(!props.searchQuery.oneWayTrip) {\r\n            startIndex = 0;\r\n\r\n            props.flights.map((el) => {\r\n\r\n                startIndex = 0;\r\n                flightPoints.length = 0;\r\n                //find next start point\r\n                if (el.departure.toLowerCase() == props.searchQuery.destinationLocation.toLowerCase()) {\r\n                    var validTime = false;\r\n                    if (!props.searchQuery.flexibleReturn\r\n                        && el.departureDate.getFullYear() == props.searchQuery.soonestReturnDate.getFullYear()\r\n                        && el.departureDate.getMonth() == props.searchQuery.soonestReturnDate.getMonth()\r\n                        && el.departureDate.getDate() == props.searchQuery.soonestReturnDate.getDate()\r\n                        || props.searchQuery.flexibleReturn\r\n                        && el.departureDate.getFullYear() >= props.searchQuery.soonestReturnDate.getFullYear()\r\n                        && el.departureDate.getFullYear() <= props.searchQuery.latestReturnDate.getFullYear()\r\n                        && el.departureDate.getMonth() >= props.searchQuery.soonestReturnDate.getMonth()\r\n                        && el.departureDate.getMonth() <= props.searchQuery.latestReturnDate.getMonth()\r\n                        && el.departureDate.getDate() >= props.searchQuery.soonestReturnDate.getDate()\r\n                        && el.departureDate.getDate() <= props.searchQuery.latestReturnDate.getDate())\r\n                    {\r\n                        if(!morningFilter && !afternoonFilter && !eveningFilter)\r\n                        {\r\n                            validTime = true;\r\n                        }\r\n                        else if(morningFilter && el.departureDate.getHours() >= 0 && el.departureDate.getHours() < 12\r\n                            || afternoonFilter && el.departureDate.getHours() >= 12 && el.departureDate.getHours() < 18\r\n                            || eveningFilter && el.departureDate.getHours() >= 18)\r\n                        {\r\n                            validTime = true;\r\n                        }\r\n                    }\r\n\r\n                    if (validTime) {\r\n                        if (el.destination.toLowerCase() == props.searchQuery.departureLocation.toLowerCase()) {\r\n                            //add to flight list\r\n                            returnFlightList.push([el])\r\n                            //don't include other results as they are meaningless and create a loop\r\n                        } else {\r\n                            flightPoints.push(new FlightPoint(null, el));\r\n\r\n\r\n                            //search for flights from this node\r\n                            props.flights.map((el2) => {\r\n                                if (el2.departure.toLowerCase() == flightPoints[startIndex].curr.destination.toLowerCase()) {\r\n                                    //check flight occurs after last flight\r\n                                    validTime = false;\r\n                                    var dayAfter = new Date();\r\n                                    dayAfter.setDate(el.departureDate.getDate() + 1);\r\n\r\n                                    if (el.departureDate.getFullYear() == el2.departureDate.getFullYear()\r\n                                        && el.departureDate.getMonth() == el2.departureDate.getMonth()\r\n                                        && el.departureDate.getDate() == el2.departureDate.getDate()\r\n                                        ||\r\n                                        dayAfter.getFullYear() == el2.departureDate.getFullYear()\r\n                                        && dayAfter.getMonth() == el2.departureDate.getMonth()\r\n                                        && dayAfter.getDate() == el2.departureDate.getDate()) {\r\n                                        validTime = true;\r\n                                    }\r\n\r\n                                    if (validTime) {\r\n                                        if (el2.destination.toLowerCase() == props.searchQuery.departureLocation.toLowerCase()) {\r\n                                            returnFlightList.push([el, el2])\r\n                                            //add to search results\r\n                                            //don't search further due to loop\r\n                                        } else {\r\n                                            flightPoints.push(new FlightPoint(flightPoints[startIndex], el2));\r\n                                        }\r\n                                    }\r\n                                }\r\n                            })\r\n\r\n                            startIndex++;\r\n                            var endIndex = flightPoints.length;\r\n                            for (var i = startIndex; i < endIndex; i++) {\r\n                                props.flights.map((el2) => {\r\n\r\n                                    if (el2.departure.toLowerCase() == flightPoints[i].curr.destination.toLowerCase() &&\r\n                                        el2.destination.toLowerCase() == props.searchQuery.departureLocation.toLowerCase()) {\r\n                                        //check if flight occurs after last flight\r\n                                        validTime = false;\r\n                                        var dayAfter = new Date();\r\n                                        dayAfter.setDate(flightPoints[i].curr.departureDate.getDate() + 1);\r\n\r\n                                        if (flightPoints[i].curr.departureDate.getFullYear() == el2.departureDate.getFullYear()\r\n                                            && flightPoints[i].curr.departureDate.getMonth() == el2.departureDate.getMonth()\r\n                                            && flightPoints[i].curr.departureDate.getDate() == el2.departureDate.getDate()\r\n                                            ||\r\n                                            dayAfter.getFullYear() == el2.departureDate.getFullYear()\r\n                                            && dayAfter.getMonth() == el2.departureDate.getMonth()\r\n                                            && dayAfter.getDate() == el2.departureDate.getDate()) {\r\n                                            validTime = true;\r\n                                        }\r\n\r\n                                        if (validTime) {\r\n                                            //add flight to list\r\n                                            returnFlightList.push([el, flightPoints[i].curr, el2]);\r\n                                            flightPoints.push(new FlightPoint(flightPoints[i], el2));\r\n                                        }\r\n                                    }\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    function sort(e)\r\n    {\r\n        //og(e);\r\n        if(e == \"soonest\")\r\n        {\r\n            for(let i = 0; i < flightList.length; i++)\r\n            {\r\n                for(let j = 0; j < flightList.length - i - 1; j++)\r\n                {\r\n                    if(flightList[j+1][0].departureDate < flightList[j][0].departureDate)\r\n                    {\r\n                        [flightList[j+1], flightList[j]] = [flightList[j], flightList[j+1]];\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(let i = 0; i < returnFlightList.length; i++)\r\n            {\r\n                for(let j = 0; j < returnFlightList.length - i - 1; j++)\r\n                {\r\n                    if(returnFlightList[j+1][0].departureDate < returnFlightList[j][0].departureDate)\r\n                    {\r\n                        [returnFlightList[j+1], returnFlightList[j]] = [returnFlightList[j], returnFlightList[j+1]];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function Return()\r\n    {\r\n        if(props.searchQuery.oneWayTrip)\r\n        {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n          <div>\r\n              <h2>Return Trip</h2>\r\n\r\n              <table className={classes.tableList}>\r\n                  <tr>\r\n                      <th>Flight</th>\r\n                      <th>Departure</th>\r\n                      <th>Destination</th>\r\n                      <th>Date</th>\r\n                      <th>Dep</th>\r\n                      <th>Arr</th>\r\n                      <th>Favorite</th>\r\n                      <th>Select</th>\r\n                      <th>Sponsored</th>\r\n                  </tr>\r\n                  <tbody>\r\n                  {returnFlightList.map((flightDetails) => (\r\n                      <MultiFlightItem\r\n                          flightPackage={flightDetails}\r\n                          selectedFlights={selectedReturnFlight}\r\n                          return={true}\r\n                          selectFlight={res => res == true ? setReturnFlightSelected(true) : setFlightSelected(true)}\r\n                          selFlight={res => setSelectedReturnFlight(res)}\r\n                      />\r\n                  ))}\r\n                  </tbody>\r\n              </table>\r\n          </div>\r\n        );\r\n    }\r\n\r\n    function bookingFlightHandler()\r\n    {\r\n        const flightArr = [];\r\n\r\n        if(props.searchQuery.oneWayTrip)\r\n        {\r\n\r\n           if(flightSelected)\r\n           {\r\n               selectedFlight.map((flight) =>\r\n               {\r\n                   //console.log(flight);\r\n                   flightArr.push(flight);\r\n               })\r\n\r\n               //move onto next phase\r\n               context.setBookingsSelected(true);\r\n               //console.log(context.bookingsSelected);\r\n               props.exportFlights(flightArr);\r\n               return;\r\n           }\r\n        }\r\n        else\r\n        {\r\n            if(flightSelected && returnFlightSelected)\r\n            {\r\n                selectedFlight.map((flight) =>\r\n                {\r\n                    flightArr.push(flight);\r\n                })\r\n                selectedReturnFlight.map((flight) =>\r\n                {\r\n                    flightArr.push(flight);\r\n                })\r\n\r\n                context.setBookingsSelected(true);\r\n                //console.log(context.bookingsSelected);\r\n                props.exportFlights(flightArr);\r\n                return;\r\n            }\r\n        }\r\n\r\n        //some error has occured\r\n        //console.log(\"you have not selected a return or departure flights\");\r\n        return;\r\n    }\r\n\r\n    function swap(arr, i ,j)\r\n    {\r\n        [arr[j], arr[i]] = [arr[i], arr[j]];\r\n    }\r\n\r\n    function partition(arr, lowBound, highBound)\r\n    {\r\n        var highCount = 0;\r\n\r\n\r\n        for(let h = 0; h < arr[highBound].length; h++)\r\n        {\r\n            if(arr[highBound][h].sponsored == true)\r\n            {\r\n                highCount += 1;\r\n            }\r\n        }\r\n\r\n        let piv = highCount;\r\n        let i = lowBound - 1;\r\n\r\n        for(let j = lowBound; j <= highBound - 1; j++)\r\n        {\r\n            var jCount = 0;\r\n\r\n            for(let h = 0; h < arr[j].length; h++)\r\n            {\r\n                if(arr[j][h].sponsored == true)\r\n                {\r\n                    jCount += 1;\r\n                }\r\n            }\r\n\r\n            if(jCount > piv)\r\n            {\r\n                i++;\r\n                swap(arr, i, j);\r\n            }\r\n        }\r\n        swap(arr, i  + 1, highBound);\r\n        return (i + 1);\r\n    }\r\n\r\n    function quickSort(arr, low, high)\r\n    {\r\n        if(low < high)\r\n        {\r\n            let partIndex = partition(arr, low, high);\r\n            quickSort(arr, low, partIndex - 1);\r\n            quickSort(arr, partIndex + 1, high);\r\n        }\r\n    }\r\n\r\n    function sponsoredSort(arr)\r\n    {\r\n        quickSort(arr, 0, arr.length - 1);\r\n        /*for(let i = 0; i < arr.length; i++)\r\n        {\r\n            for(let j = 0; j < arr.length - i - 1; j++)\r\n            {\r\n                var nextSponsoredCount = 0;\r\n                var thisSponsoredCount = 0;\r\n\r\n\r\n                for(let h = 0; h < arr[j + i].length; h++)\r\n                {\r\n                    if(arr[j + 1][h].sponsored == true)\r\n                    {\r\n                        nextSponsoredCount += 1;\r\n                    }\r\n                }\r\n\r\n                for(let h = 0; h < arr[j].length; h++)\r\n                {\r\n                    if(arr[j][h].sponsored == true)\r\n                    {\r\n                        thisSponsoredCount += 1;\r\n                    }\r\n                }\r\n\r\n                if(nextSponsoredCount > thisSponsoredCount)\r\n                {\r\n                    [arr[j+1], arr[j]] = [arr[j], arr[j+1]];\r\n                }\r\n            }\r\n        }*/\r\n    }\r\n\r\n    multiSearch();\r\n    //searchFlightList();\r\n    //sort(\"latest\");\r\n    sponsoredSort(flightList);\r\n    sponsoredSort(returnFlightList);\r\n\r\n\r\n    return (\r\n\r\n        <Card>\r\n            <h2>Trip to Destination</h2>\r\n\r\n            <div className={classes.list}>\r\n                <label htmlFor='morningDeparture'> Morning Departure </label>\r\n                <input type='checkbox' id='morningDeparture' onClick={toggleMorningFilter} />\r\n\r\n                <label htmlFor='afternoonDeparture'> Afternoon Departure </label>\r\n                <input type='checkbox' id='afternoonDeparture' onClick={toggleAfternoonFilter} />\r\n\r\n                <label htmlFor='eveningDeparture'> Evening Departure </label>\r\n                <input type='checkbox' id='eveningDeparture' onClick={toggleEveningFilter}/>\r\n            </div>\r\n\r\n            <table className={classes.tableList}>\r\n                <tr>\r\n                    <th>Flight</th>\r\n                    <th>Departure</th>\r\n                    <th>Destination</th>\r\n                    <th>Date</th>\r\n                    <th>Dep</th>\r\n                    <th>Arr</th>\r\n                    <th>Favourite</th>\r\n                    <th>Select</th>\r\n                    <th>Sponsored</th>\r\n                </tr>\r\n                <tbody>\r\n                    {flightList.map((flightDetails) => (\r\n                        <MultiFlightItem\r\n                            flightPackage={flightDetails}\r\n                            selectedFlights={selectedFlight}\r\n                            return={false}\r\n                            selectFlight={res => res == true ? setReturnFlightSelected(true) : setFlightSelected(true)}\r\n                            selFlight={res => setSelectedFlight(res)}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            <Return />\r\n\r\n\r\n            <button className={classes.submitButt} onClick={bookingFlightHandler}>\r\n                Book Flights\r\n            </button>\r\n\r\n        </Card>\r\n\r\n    );\r\n}\r\n\r\nexport default FlightList;\r\n"]},"metadata":{},"sourceType":"module"}